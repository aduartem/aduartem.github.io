<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://aduartem.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://aduartem.github.io/" rel="alternate" type="text/html" /><updated>2025-06-14T04:15:41+00:00</updated><id>https://aduartem.github.io/feed.xml</id><title type="html">aduartem</title><subtitle>Tutoriales, art√≠culos, v√≠deos y recursos sobre JavaScript, Angular, React, Node.JS, Python, MySQL, Linux y m√°s. Desarrollo Web, Backend, Bases de Datos y Patrones de Dise√±o.</subtitle><entry><title type="html">üöÄ Gu√≠a pr√°ctica para construir APIs RESTful con Spring Boot</title><link href="https://aduartem.github.io/java/spring-boot/2025/06/10/guia-practica-para-construir-apis-restful-con-spring-boot.html" rel="alternate" type="text/html" title="üöÄ Gu√≠a pr√°ctica para construir APIs RESTful con Spring Boot" /><published>2025-06-10T00:00:00+00:00</published><updated>2025-06-10T00:00:00+00:00</updated><id>https://aduartem.github.io/java/spring-boot/2025/06/10/guia-practica-para-construir-apis-restful-con-spring-boot</id><content type="html" xml:base="https://aduartem.github.io/java/spring-boot/2025/06/10/guia-practica-para-construir-apis-restful-con-spring-boot.html"><![CDATA[<p>Spring Boot se ha convertido en uno de los frameworks m√°s populares para desarrollar aplicaciones Java modernas. Su enfoque centrado en la simplicidad y la configuraci√≥n m√≠nima lo hace ideal para construir APIs REST de forma r√°pida y robusta. En esta gu√≠a te mostrar√© c√≥mo manejar rutas, controlar peticiones y respuestas, y estructurar tu aplicaci√≥n siguiendo buenas pr√°cticas. ¬°Comencemos! üí™</p>

<h2 id="-qu√©-es-spring-boot">üå± ¬øQu√© es <strong>Spring Boot</strong>?</h2>

<p>Es una extensi√≥n <strong>opinada</strong> de Spring que:</p>

<ul>
  <li>Simplifica la configuraci√≥n eliminando el ‚Äúboilerplate‚Äù.</li>
  <li>Incluye <strong>starters</strong>: dependencias que ya agregan todo lo necesario (ej.: <em>spring-boot-starter-web</em>, <em>spring-boot-starter-data-jpa</em>, etc.)</li>
  <li>Incorpora un servidor embebido (Tomcat, Jetty‚Ä¶) para ejecutar aplicaciones como jar ejecutables</li>
  <li>Ofrece <strong>autoconfiguraci√≥n</strong> que detecta lo que tienes en el classpath y activa autom√°ticamente lo pertinente</li>
  <li>Trae caracter√≠sticas ‚Äúlista para producci√≥n‚Äù: Actuator (m√©tricas, health checks), configuraci√≥n externa, logging integrado</li>
</ul>

<h2 id="Ô∏è-qu√©-son-las-anotaciones-en-spring">üè∑Ô∏è ¬øQu√© son las anotaciones en Spring?</h2>

<p>Las <strong>anotaciones</strong> en Java (y en Spring) son <strong>marcas especiales</strong> que comienzan con <code class="language-plaintext highlighter-rouge">@</code> y se colocan sobre clases, m√©todos o atributos para darle instrucciones al framework sobre c√≥mo debe comportarse ese elemento.</p>

<p>üëâ En el contexto de <strong>Spring</strong>, las anotaciones reemplazan mucha configuraci√≥n manual (como XML) y hacen el c√≥digo m√°s limpio y f√°cil de mantener.</p>

<h2 id="-ejemplos-comunes-de-anotaciones-en-spring-boot">üîß Ejemplos comunes de anotaciones en Spring Boot</h2>

<table>
  <thead>
    <tr>
      <th>Anotaci√≥n</th>
      <th>¬øPara qu√© sirve?</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">@SpringBootApplication</code></td>
      <td>Marca el punto de entrada principal de una app Spring Boot</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">@Component</code></td>
      <td>Indica que una clase es un componente administrado por Spring</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">@Service</code></td>
      <td>Similar a <code class="language-plaintext highlighter-rouge">@Component</code>, pero sem√°nticamente indica l√≥gica de negocio</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">@Repository</code></td>
      <td>Marca una clase que accede a la base de datos</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">@Controller</code></td>
      <td>Define una clase que maneja peticiones HTTP</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">@Autowired</code></td>
      <td>Inyecta autom√°ticamente dependencias</td>
    </tr>
  </tbody>
</table>

<h2 id="-c√≥mo-se-importan">üì¶ ¬øC√≥mo se importan?</h2>

<p>En la mayor√≠a de los entornos de desarrollo como IntelliJ IDEA o Eclipse, cuando escribes una anotaci√≥n, el IDE suele sugerir autom√°ticamente el <strong>import</strong> correcto.</p>

<p>Pero tambi√©n puedes importarlas manualmente:</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">org.springframework.stereotype.Component</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Autowired</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.boot.autoconfigure.SpringBootApplication</span><span class="o">;</span>
</code></pre></div></div>

<p>üí° Estas anotaciones provienen de distintos paquetes dentro de Spring. Por ejemplo:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">@Component</code>, <code class="language-plaintext highlighter-rouge">@Service</code>, <code class="language-plaintext highlighter-rouge">@Repository</code>: vienen de <code class="language-plaintext highlighter-rouge">org.springframework.stereotype</code></li>
  <li><code class="language-plaintext highlighter-rouge">@Autowired</code>: viene de <code class="language-plaintext highlighter-rouge">org.springframework.beans.factory.annotation</code></li>
  <li><code class="language-plaintext highlighter-rouge">@SpringBootApplication</code>: viene de <code class="language-plaintext highlighter-rouge">org.springframework.boot.autoconfigure</code></li>
</ul>

<h2 id="-anotaciones-para-controladores-rest-en-spring">üåê Anotaciones para controladores REST en Spring</h2>

<p>Las anotaciones en los controladores REST de Spring Boot permiten definir de manera sencilla c√≥mo se manejan las rutas y c√≥mo se recibe la informaci√≥n del cliente. Esto hace que la creaci√≥n de endpoints sea clara, flexible y f√°cil de mantener.</p>

<h3 id="anotaciones-para-rutas-seg√∫n-el-verbo-http">Anotaciones para rutas seg√∫n el verbo HTTP</h3>

<table>
  <thead>
    <tr>
      <th>Verbo HTTP</th>
      <th>Anotaci√≥n</th>
      <th>Uso com√∫n</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>GET</td>
      <td><code class="language-plaintext highlighter-rouge">@GetMapping</code></td>
      <td>Obtener recursos</td>
    </tr>
    <tr>
      <td>POST</td>
      <td><code class="language-plaintext highlighter-rouge">@PostMapping</code></td>
      <td>Crear nuevos recursos</td>
    </tr>
    <tr>
      <td>PUT</td>
      <td><code class="language-plaintext highlighter-rouge">@PutMapping</code></td>
      <td>Reemplazar recursos</td>
    </tr>
    <tr>
      <td>DELETE</td>
      <td><code class="language-plaintext highlighter-rouge">@DeleteMapping</code></td>
      <td>Eliminar recursos</td>
    </tr>
    <tr>
      <td>PATCH</td>
      <td><code class="language-plaintext highlighter-rouge">@PatchMapping</code></td>
      <td>Actualizaci√≥n parcial</td>
    </tr>
  </tbody>
</table>

<h3 id="anotaciones-para-recibir-datos-del-cliente">Anotaciones para recibir datos del cliente</h3>

<p>Estas anotaciones permiten a los controladores recibir informaci√≥n enviada por el cliente de distintas formas, facilitando la construcci√≥n de endpoints flexibles.</p>

<table>
  <thead>
    <tr>
      <th>Anotaci√≥n</th>
      <th>Uso principal</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">@PathVariable</code></td>
      <td>Extrae datos directamente de la <strong>ruta URL</strong></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">@RequestBody</code></td>
      <td>Indica que un par√°metro del m√©todo viene del <strong>cuerpo HTTP</strong></td>
    </tr>
  </tbody>
</table>

<p><code class="language-plaintext highlighter-rouge">@PathVariable</code> se utiliza para capturar valores din√°micos que forman parte de la URL (por ejemplo, un identificador en <code class="language-plaintext highlighter-rouge">/api/tareas/123</code>), mientras que <code class="language-plaintext highlighter-rouge">@RequestBody</code> permite recibir y deserializar datos enviados en el cuerpo de la petici√≥n, como objetos JSON en operaciones POST o PUT.
Estas herramientas facilitan la construcci√≥n de endpoints flexibles y adaptados a diferentes necesidades de entrada de datos.</p>

<p>üí° Todas estas anotaciones pertenecen al <strong>paquete <code class="language-plaintext highlighter-rouge">org.springframework.web.bind.annotation</code></strong>, el cual es esencial para construir controladores REST con Spring MVC o Spring Boot.</p>

<h4 id="importaci√≥n">Importaci√≥n</h4>

<p>Podemos importar cada anotaci√≥n de forma individual o usar el comod√≠n para importar todas:</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.GetMapping</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.PostMapping</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.PutMapping</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.PatchMapping</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.DeleteMapping</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.PathVariable</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.RequestBody</span><span class="o">;</span>
<span class="c1">// o simplemente</span>
<span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.*</span><span class="o">;</span>
</code></pre></div></div>

<h3 id="buenas-pr√°cticas">Buenas pr√°cticas</h3>

<ul>
  <li>Utiliza DTOs para separar la l√≥gica de tu dominio del formato de entrada/salida.</li>
  <li>Valida los datos recibidos en el cuerpo de la petici√≥n usando anotaciones como <code class="language-plaintext highlighter-rouge">@Valid</code>.</li>
  <li>Mant√©n tus controladores enfocados solo en la l√≥gica de manejo de peticiones.</li>
</ul>

<h3 id="error-com√∫n">Error com√∫n</h3>

<ul>
  <li>No validar los datos recibidos, lo que puede provocar errores en tiempo de ejecuci√≥n.</li>
</ul>

<h2 id="ejemplo-completo-crud-de-tareas-Ô∏è">Ejemplo completo: CRUD de tareas üóÇÔ∏è</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@RestController</span>
<span class="nd">@RequestMapping</span><span class="o">(</span><span class="s">"/api/tasks"</span><span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">TaskController</span> <span class="o">{</span>

    <span class="nd">@Autowired</span>
    <span class="kd">private</span> <span class="nc">TaskService</span> <span class="n">taskService</span><span class="o">;</span>

    <span class="c1">// GET: obtener una tarea</span>
    <span class="nd">@GetMapping</span><span class="o">(</span><span class="s">"/{id}"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="nc">ResponseEntity</span><span class="o">&lt;</span><span class="nc">Task</span><span class="o">&gt;</span> <span class="nf">getTaskById</span><span class="o">(</span><span class="nd">@PathVariable</span> <span class="nc">Long</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">taskService</span><span class="o">.</span><span class="na">getTaskById</span><span class="o">(</span><span class="n">id</span><span class="o">)</span>
            <span class="o">.</span><span class="na">map</span><span class="o">(</span><span class="n">task</span> <span class="o">-&gt;</span> <span class="k">new</span> <span class="nc">ResponseEntity</span><span class="o">&lt;&gt;(</span><span class="n">task</span><span class="o">,</span> <span class="nc">HttpStatus</span><span class="o">.</span><span class="na">OK</span><span class="o">))</span>
            <span class="o">.</span><span class="na">orElseGet</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="k">new</span> <span class="nc">ResponseEntity</span><span class="o">&lt;&gt;(</span><span class="nc">HttpStatus</span><span class="o">.</span><span class="na">NOT_FOUND</span><span class="o">));</span>
    <span class="o">}</span>

    <span class="c1">// POST: crear una tarea</span>
    <span class="nd">@PostMapping</span>
    <span class="kd">public</span> <span class="nc">ResponseEntity</span><span class="o">&lt;</span><span class="nc">Task</span><span class="o">&gt;</span> <span class="nf">createTask</span><span class="o">(</span><span class="nd">@RequestBody</span> <span class="nc">Task</span> <span class="n">task</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Task</span> <span class="n">created</span> <span class="o">=</span> <span class="n">taskService</span><span class="o">.</span><span class="na">saveTask</span><span class="o">(</span><span class="n">task</span><span class="o">);</span>
        <span class="k">return</span> <span class="k">new</span> <span class="nc">ResponseEntity</span><span class="o">&lt;&gt;(</span><span class="n">created</span><span class="o">,</span> <span class="nc">HttpStatus</span><span class="o">.</span><span class="na">CREATED</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="c1">// PUT: actualizar una tarea completamente</span>
    <span class="nd">@PutMapping</span><span class="o">(</span><span class="s">"/{id}"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="nc">ResponseEntity</span><span class="o">&lt;</span><span class="nc">Task</span><span class="o">&gt;</span> <span class="nf">updateTask</span><span class="o">(</span><span class="nd">@PathVariable</span> <span class="nc">Long</span> <span class="n">id</span><span class="o">,</span> <span class="nd">@RequestBody</span> <span class="nc">Task</span> <span class="n">task</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">new</span> <span class="nc">ResponseEntity</span><span class="o">&lt;&gt;(</span><span class="n">taskService</span><span class="o">.</span><span class="na">updateTask</span><span class="o">(</span><span class="n">id</span><span class="o">,</span> <span class="n">task</span><span class="o">),</span> <span class="nc">HttpStatus</span><span class="o">.</span><span class="na">OK</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="c1">// PATCH: actualizar parcialmente una tarea</span>
    <span class="nd">@PatchMapping</span><span class="o">(</span><span class="s">"/{id}"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="nc">ResponseEntity</span><span class="o">&lt;</span><span class="nc">Task</span><span class="o">&gt;</span> <span class="nf">patchTask</span><span class="o">(</span><span class="nd">@PathVariable</span> <span class="nc">Long</span> <span class="n">id</span><span class="o">,</span> <span class="nd">@RequestBody</span> <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Object</span><span class="o">&gt;</span> <span class="n">updates</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">new</span> <span class="nc">ResponseEntity</span><span class="o">&lt;&gt;(</span><span class="n">taskService</span><span class="o">.</span><span class="na">patchTask</span><span class="o">(</span><span class="n">id</span><span class="o">,</span> <span class="n">updates</span><span class="o">),</span> <span class="nc">HttpStatus</span><span class="o">.</span><span class="na">OK</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="c1">// DELETE: eliminar una tarea</span>
    <span class="nd">@DeleteMapping</span><span class="o">(</span><span class="s">"/{id}"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="nc">ResponseEntity</span><span class="o">&lt;</span><span class="nc">Void</span><span class="o">&gt;</span> <span class="nf">deleteTask</span><span class="o">(</span><span class="nd">@PathVariable</span> <span class="nc">Long</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">taskService</span><span class="o">.</span><span class="na">deleteTask</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>
        <span class="k">return</span> <span class="k">new</span> <span class="nc">ResponseEntity</span><span class="o">&lt;&gt;(</span><span class="nc">HttpStatus</span><span class="o">.</span><span class="na">NO_CONTENT</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h2 id="-par√°metros-din√°micos-y-consultas-personalizadas">üîç Par√°metros din√°micos y consultas personalizadas</h2>

<p>Ya sea extrayendo valores de la URL con <code class="language-plaintext highlighter-rouge">@PathVariable</code> o leyendo par√°metros de consulta con <code class="language-plaintext highlighter-rouge">@RequestParam</code>, Spring Boot te da herramientas claras para manejar solicitudes complejas.</p>

<h3 id="ejemplo-con-par√°metros-de-b√∫squeda">Ejemplo con par√°metros de b√∫squeda:</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@GetMapping</span><span class="o">(</span><span class="s">"/search"</span><span class="o">)</span>
<span class="kd">public</span> <span class="nc">ResponseEntity</span><span class="o">&lt;</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Task</span><span class="o">&gt;&gt;</span> <span class="nf">searchTasks</span><span class="o">(</span>
    <span class="nd">@RequestParam</span> <span class="nc">String</span> <span class="n">title</span><span class="o">,</span>
    <span class="nd">@RequestParam</span><span class="o">(</span><span class="n">required</span> <span class="o">=</span> <span class="kc">false</span><span class="o">)</span> <span class="nc">Boolean</span> <span class="n">completed</span>
<span class="o">)</span> <span class="o">{</span>
    <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Task</span><span class="o">&gt;</span> <span class="n">tasks</span> <span class="o">=</span> <span class="n">taskService</span><span class="o">.</span><span class="na">findByTitleAndStatus</span><span class="o">(</span><span class="n">title</span><span class="o">,</span> <span class="n">completed</span><span class="o">);</span>
    <span class="k">return</span> <span class="k">new</span> <span class="nc">ResponseEntity</span><span class="o">&lt;&gt;(</span><span class="n">tasks</span><span class="o">,</span> <span class="nc">HttpStatus</span><span class="o">.</span><span class="na">OK</span><span class="o">);</span>
<span class="o">}</span>
</code></pre></div></div>

<h2 id="-separaci√≥n-por-capas-arquitectura-limpia-en-spring-boot">üß± Separaci√≥n por capas: arquitectura limpia en Spring Boot</h2>

<p>Para un desarrollo escalable, aplica una arquitectura multicapa:</p>

<ul>
  <li><strong>Controller</strong>: entrada de peticiones HTTP.</li>
  <li><strong>Service</strong>: l√≥gica de negocio.</li>
  <li><strong>Repository</strong>: acceso a base de datos.</li>
  <li><strong>DTO/Model</strong>: transporte de datos y mapeo a entidades.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>com.example.app
‚îú‚îÄ‚îÄ controller
‚îú‚îÄ‚îÄ service
‚îú‚îÄ‚îÄ repository
‚îú‚îÄ‚îÄ dto
‚îî‚îÄ‚îÄ model
</code></pre></div></div>

<h2 id="-persistencia-con-jpa--hibernate">üíæ Persistencia con JPA + Hibernate</h2>

<p>Spring Boot configura autom√°ticamente JPA (usualmente con Hibernate) para que puedas mapear objetos Java a tablas SQL f√°cilmente:</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Entity</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Task</span> <span class="o">{</span>
    <span class="nd">@Id</span>
    <span class="nd">@GeneratedValue</span><span class="o">(</span><span class="n">strategy</span> <span class="o">=</span> <span class="nc">GenerationType</span><span class="o">.</span><span class="na">IDENTITY</span><span class="o">)</span>
    <span class="kd">private</span> <span class="nc">Long</span> <span class="n">id</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">title</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">completed</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>

<p>Y para configurar la base de datos, basta con esto en <code class="language-plaintext highlighter-rouge">application.properties</code>:</p>

<div class="language-properties highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="py">spring.datasource.url</span><span class="p">=</span><span class="s">jdbc:mysql://localhost:3306/taskdb</span>
<span class="py">spring.datasource.username</span><span class="p">=</span><span class="s">root</span>
<span class="py">spring.datasource.password</span><span class="p">=</span><span class="s">tu_clave</span>
<span class="py">spring.jpa.hibernate.ddl-auto</span><span class="p">=</span><span class="s">update</span>
</code></pre></div></div>

<h2 id="-uso-de-dtos-para-separar-entidades-y-transporte-de-datos">üì¶ Uso de DTOs para separar entidades y transporte de datos</h2>

<p>Un <strong>DTO (Data Transfer Object)</strong> es una clase que se utiliza para transportar datos entre el cliente y el servidor, sin exponer directamente las entidades del dominio.</p>

<h3 id="ventajas-de-usar-dtos">Ventajas de usar DTOs</h3>

<ul>
  <li>üîí Ocultas campos sensibles o irrelevantes de la entidad.</li>
  <li>üß© Puedes personalizar qu√© datos enviar o recibir seg√∫n el caso de uso.</li>
  <li>üîÑ Desacoplas la l√≥gica de persistencia del formato de comunicaci√≥n.</li>
</ul>

<h3 id="ejemplo-de-dto-para-crear-tareas">Ejemplo de DTO para crear tareas:</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">TaskCreateDTO</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">title</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">completed</span><span class="o">;</span>

    <span class="c1">// Getters y setters</span>
<span class="o">}</span>
</code></pre></div></div>

<p>Y para la respuesta:</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">TaskDTO</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="nc">Long</span> <span class="n">id</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">title</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">completed</span><span class="o">;</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">TaskDTO</span> <span class="nf">fromEntity</span><span class="o">(</span><span class="nc">Task</span> <span class="n">task</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">TaskDTO</span> <span class="n">dto</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">TaskDTO</span><span class="o">();</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="n">task</span><span class="o">.</span><span class="na">getId</span><span class="o">());</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="n">task</span><span class="o">.</span><span class="na">getTitle</span><span class="o">());</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setCompleted</span><span class="o">(</span><span class="n">task</span><span class="o">.</span><span class="na">isCompleted</span><span class="o">());</span>
        <span class="k">return</span> <span class="n">dto</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h2 id="-inyecci√≥n-de-dependencias-en-spring-boot">üß™ Inyecci√≥n de dependencias en Spring Boot</h2>

<p>La <strong>inyecci√≥n de dependencias (DI)</strong> permite a Spring proporcionar autom√°ticamente los objetos que una clase necesita, sin que ella los cree manualmente.</p>

<h3 id="ventajas">Ventajas:</h3>

<ul>
  <li>üîÑ Menor acoplamiento entre clases.</li>
  <li>üß™ Facilita las pruebas unitarias.</li>
  <li>‚ôªÔ∏è Mayor reutilizaci√≥n y mantenibilidad del c√≥digo.</li>
</ul>

<h3 id="ejemplo">Ejemplo:</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Service</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">TaskService</span> <span class="o">{</span>

    <span class="kd">private</span> <span class="kd">final</span> <span class="nc">TaskRepository</span> <span class="n">taskRepository</span><span class="o">;</span>

    <span class="nd">@Autowired</span> <span class="c1">// Constructor recomendado</span>
    <span class="kd">public</span> <span class="nf">TaskService</span><span class="o">(</span><span class="nc">TaskRepository</span> <span class="n">taskRepository</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">taskRepository</span> <span class="o">=</span> <span class="n">taskRepository</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">Task</span> <span class="nf">saveTask</span><span class="o">(</span><span class="nc">Task</span> <span class="n">task</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">taskRepository</span><span class="o">.</span><span class="na">save</span><span class="o">(</span><span class="n">task</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h2 id="Ô∏è-acceso-a-datos-con-repository">üóÉÔ∏è Acceso a datos con Repository</h2>

<p>La anotaci√≥n <code class="language-plaintext highlighter-rouge">@Repository</code> marca una interfaz como componente que accede a la base de datos. Usando <code class="language-plaintext highlighter-rouge">JpaRepository</code>, heredas m√©todos CRUD listos para usar.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Repository</span>
<span class="kd">public</span> <span class="kd">interface</span> <span class="nc">TaskRepository</span> <span class="kd">extends</span> <span class="nc">JpaRepository</span><span class="o">&lt;</span><span class="nc">Task</span><span class="o">,</span> <span class="nc">Long</span><span class="o">&gt;</span> <span class="o">{</span>
    <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Task</span><span class="o">&gt;</span> <span class="nf">findByCompleted</span><span class="o">(</span><span class="kt">boolean</span> <span class="n">completed</span><span class="o">);</span>
<span class="o">}</span>
</code></pre></div></div>

<h2 id="-llevando-todo-a-la-pr√°ctica-post-con-dto--di--repository">üîó Llevando todo a la pr√°ctica: POST con DTO + DI + Repository</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@RestController</span>
<span class="nd">@RequestMapping</span><span class="o">(</span><span class="s">"/api/tasks"</span><span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">TaskController</span> <span class="o">{</span>

    <span class="kd">private</span> <span class="kd">final</span> <span class="nc">TaskService</span> <span class="n">taskService</span><span class="o">;</span>

    <span class="nd">@Autowired</span>
    <span class="kd">public</span> <span class="nf">TaskController</span><span class="o">(</span><span class="nc">TaskService</span> <span class="n">taskService</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">taskService</span> <span class="o">=</span> <span class="n">taskService</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="nd">@PostMapping</span>
    <span class="kd">public</span> <span class="nc">ResponseEntity</span><span class="o">&lt;</span><span class="nc">TaskDTO</span><span class="o">&gt;</span> <span class="nf">createTask</span><span class="o">(</span><span class="nd">@RequestBody</span> <span class="nc">TaskCreateDTO</span> <span class="n">taskDto</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Task</span> <span class="n">task</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Task</span><span class="o">();</span>
        <span class="n">task</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="n">taskDto</span><span class="o">.</span><span class="na">getTitle</span><span class="o">());</span>
        <span class="n">task</span><span class="o">.</span><span class="na">setCompleted</span><span class="o">(</span><span class="n">taskDto</span><span class="o">.</span><span class="na">isCompleted</span><span class="o">());</span>

        <span class="nc">Task</span> <span class="n">saved</span> <span class="o">=</span> <span class="n">taskService</span><span class="o">.</span><span class="na">saveTask</span><span class="o">(</span><span class="n">task</span><span class="o">);</span>
        <span class="k">return</span> <span class="k">new</span> <span class="nc">ResponseEntity</span><span class="o">&lt;&gt;(</span><span class="nc">TaskDTO</span><span class="o">.</span><span class="na">fromEntity</span><span class="o">(</span><span class="n">saved</span><span class="o">),</span> <span class="nc">HttpStatus</span><span class="o">.</span><span class="na">CREATED</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="ventajas-de-esta-implementaci√≥n">Ventajas de esta implementaci√≥n</h3>

<ul>
  <li>‚úÖ <strong>DTO</strong> protege tu modelo interno y simplifica la comunicaci√≥n con el cliente.</li>
  <li>‚úÖ <strong>Inyecci√≥n de dependencias</strong> facilita pruebas y mantiene tu c√≥digo limpio.</li>
  <li>‚úÖ <strong>Repository</strong> centraliza el acceso a la base de datos, usando interfaces concisas.</li>
</ul>

<h2 id="-despliegue-con-docker-">üì¶ Despliegue con Docker üê≥</h2>

<p>Ejemplo de Dockerfile para construir t√∫ imagen:</p>

<div class="language-Dockerfile highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">FROM</span><span class="s"> eclipse-temurin:17-jdk</span>
<span class="k">WORKDIR</span><span class="s"> /app</span>
<span class="k">COPY</span><span class="s"> target/*.jar app.jar</span>
<span class="k">ENTRYPOINT</span><span class="s"> ["java","-jar","/app/app.jar"]</span>
</code></pre></div></div>

<p>Ejemplo de configuraci√≥n de Docker Compose:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">version</span><span class="pi">:</span> <span class="s1">'</span><span class="s">3'</span>
<span class="na">services</span><span class="pi">:</span>
  <span class="na">app</span><span class="pi">:</span>
    <span class="na">build</span><span class="pi">:</span> <span class="s">.</span>
    <span class="na">ports</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s1">'</span><span class="s">8080:8080'</span>
    <span class="na">environment</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/taskdb</span>
    <span class="na">depends_on</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">db</span>
  <span class="na">db</span><span class="pi">:</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s">mysql:8</span>
    <span class="na">environment</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">MYSQL_ROOT_PASSWORD=password</span>
      <span class="pi">-</span> <span class="s">MYSQL_DATABASE=taskdb</span>
</code></pre></div></div>

<h2 id="-conclusi√≥n">üß† Conclusi√≥n</h2>

<p>Spring Boot es una herramienta poderosa para desarrollar APIs REST modernas y bien estructuradas. Gracias a su conjunto de anotaciones como <code class="language-plaintext highlighter-rouge">@GetMapping</code>, <code class="language-plaintext highlighter-rouge">@PostMapping</code>, <code class="language-plaintext highlighter-rouge">@PutMapping</code>, <code class="language-plaintext highlighter-rouge">@DeleteMapping</code> y <code class="language-plaintext highlighter-rouge">@PatchMapping</code>, puedes construir endpoints eficientes de manera declarativa y clara üß©. Al combinarlo con una arquitectura por capas, patrones como DTO y pr√°cticas como el despliegue con Docker, obtienes una soluci√≥n completa y lista para producci√≥n üöÄ.</p>

<p>¬øEst√°s listo para construir tu pr√≥xima API con Spring Boot? ¬°Manos a la obra! üíªüî•</p>

<h2 id="-recursos-web-oficiales-para-profundizar">üåê Recursos web oficiales para profundizar</h2>

<ul>
  <li><a href="https://spring.io/projects/spring-boot">Spring Boot</a></li>
  <li><a href="https://spring.io/quickstart">Gu√≠a Quickstart</a></li>
  <li><a href="https://spring.io/guides/gs/spring-boot">Construyendo una aplicaci√≥n con Spring Boot</a></li>
  <li><a href="https://spring.io/guides/gs/rest-service">Construyendo servicios web RESTful</a></li>
  <li><a href="https://spring.io/guides">Gu√≠as</a></li>
</ul>]]></content><author><name></name></author><category term="java" /><category term="spring-boot" /><category term="Java" /><category term="Spring Boot" /><category term="REST API" /><summary type="html"><![CDATA[Spring Boot se ha convertido en uno de los frameworks m√°s populares para desarrollar aplicaciones Java modernas. Su enfoque centrado en la simplicidad y la configuraci√≥n m√≠nima lo hace ideal para construir APIs REST de forma r√°pida y robusta. En esta gu√≠a te mostrar√© c√≥mo manejar rutas, controlar peticiones y respuestas, y estructurar tu aplicaci√≥n siguiendo buenas pr√°cticas. ¬°Comencemos! üí™]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://aduartem.github.io/assets/images/posts/2025/07f58bb1-cb8e-4869-b0b9-10bca603ebc9.jpg" /><media:content medium="image" url="https://aduartem.github.io/assets/images/posts/2025/07f58bb1-cb8e-4869-b0b9-10bca603ebc9.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Gu√≠a de instalaci√≥n de Arch Linux 2022.06.01 x86_64 (UEFI)</title><link href="https://aduartem.github.io/linux/arch-linux/2022/06/26/guia-de-instalacion-de-arch-linux-2022.06.01-x86_64-UEFI.html" rel="alternate" type="text/html" title="Gu√≠a de instalaci√≥n de Arch Linux 2022.06.01 x86_64 (UEFI)" /><published>2022-06-26T06:00:00+00:00</published><updated>2022-06-26T06:00:00+00:00</updated><id>https://aduartem.github.io/linux/arch-linux/2022/06/26/guia-de-instalacion-de-arch-linux-2022.06.01-x86_64-UEFI</id><content type="html" xml:base="https://aduartem.github.io/linux/arch-linux/2022/06/26/guia-de-instalacion-de-arch-linux-2022.06.01-x86_64-UEFI.html"><![CDATA[<p>Esta es una gu√≠a paso a paso de como instalar Arch Linux 2022.06.01 x86_64. Con esta gu√≠a el usuario ser√° capaz de cambiar el idioma del teclado, particionar el disco, realizar la instalaci√≥n de un entorno de escritorio y m√°s, todo el proceso se realiza por l√≠nea de comandos.</p>

<h2 id="1-instalaci√≥n-base">1. Instalaci√≥n base</h2>

<p>Vamos a seleccionar la primera opci√≥n ‚ÄúArch Linux install medium (x86_64, BIOS)‚Äù</p>

<h3 id="11-deshabilitar-el-molesto-sonido-de-las-teclas-del-teclado">1.1 Deshabilitar el molesto sonido de las teclas del teclado</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>rmmod pcspkr
</code></pre></div></div>

<h3 id="12-cambiar-el-idioma-del-teclado-a-espa√±ol">1.2 Cambiar el idioma del teclado a espa√±ol.</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>loadkeys es
</code></pre></div></div>

<h3 id="13-probando-conectividad-con-la-red">1.3. Probando conectividad con la red.</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>ping <span class="nt">-c</span> 3 www.google.com
64 bytes from www.google.com <span class="o">(</span>74.125.224.113<span class="o">)</span>: <span class="nv">icmp_seq</span><span class="o">=</span>3 <span class="nv">ttl</span><span class="o">=</span>57 <span class="nb">time</span><span class="o">=</span>27.5 ms
</code></pre></div></div>

<h3 id="14-particionar-el-disco">1.4. Particionar el disco</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>fdisk <span class="nt">-l</span>
</code></pre></div></div>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>cfdisk /dev/sda
</code></pre></div></div>

<p>Seleccionar label ‚Äú<strong>uefi</strong>‚Äù.</p>

<p>Si tenemos un sistema con 8 GiB o m√°s de memoria probablemente podamos prescindir de la partici√≥n de swap. Sino podemos crear una. Crearemos las siguientes particiones:</p>

<table>
  <thead>
    <tr>
      <th>Tama√±o</th>
      <th>Tipo</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>250M</td>
      <td>EFI System</td>
    </tr>
    <tr>
      <td>4G</td>
      <td>Linux swap</td>
    </tr>
    <tr>
      <td>resto</td>
      <td>Linux, primaria</td>
    </tr>
  </tbody>
</table>

<p>A continuaci√≥n vamos a crear nuestra primera partici√≥n; Para esto debemos seguir los siguientes pasos:<br />
-&gt; Con la tecla ‚Äúenter‚Äù seleccionar el espacio libre del disco y seleccionar ‚ÄúNew‚Äù<br />
-&gt; Partition size: 250M<br />
-&gt; Seleccionar [Type]<br />
-&gt; Seleccionar [EFI System]<br /></p>

<p>Vamos a crear la segunda partici√≥n:
-&gt; Presionamos la tecla de la flecha hacia abajo para seleccionar el espacio libre del disco y ‚Äúenter‚Äù para seleccionar ‚ÄúNew‚Äù<br />
-&gt; Partition size: 4G<br />
-&gt; Seleccionar [Type]<br />
-&gt; Seleccionar ‚ÄúLinux swap‚Äù<br /></p>

<p>Ahora crearemos la √∫ltima partici√≥n:
-&gt; Seleccionar el espacio libre del disco y seleccionar ‚ÄúNew‚Äù<br />
-&gt; En ‚ÄúPartition size: ‚Äú nos sugerir√° lo que nos queda de espacio libre. Presionamos enter para asignar ese tama√±o a nuestra nueva partici√≥n. Por defecto asignar√° tipo ‚ÄúLinux filesystem‚Äù, eso est√° bien, lo dejamos como est√°.<br /></p>

<p>Finalmente
-&gt; Seleccionar [Write]<br />
-&gt; Para confirmar igresamos ‚Äúyes‚Äù y presionamos la tecla enter.<br />
-&gt; Seleccionar [Quit]<br /></p>

<p>Si ejecutamos el comando <code class="language-plaintext highlighter-rouge">lsblk</code> podemos ver lo que hemos definido.</p>

<h3 id="15-formateando-las-particiones">1.5. Formateando las particiones</h3>

<h4 id="151-formatear-la-partici√≥n-efi">1.5.1. Formatear la partici√≥n EFI</h4>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>mkfs.fat <span class="nt">-F32</span> /dev/sda1
</code></pre></div></div>

<h4 id="152-formatear-la-partici√≥n-">1.5.2. Formatear la partici√≥n /</h4>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>mkfs.ext4 /dev/sda3
</code></pre></div></div>

<h4 id="16-crear-y-activar-la-swap">1.6. Crear y activar la swap</h4>

<p>Creamos la swap o espacio de intercambio:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>mkswap /dev/sda2
</code></pre></div></div>

<p>Y activamos la swap:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>swapon /dev/sda2
</code></pre></div></div>

<h3 id="17-montar-las-particiones">1.7. Montar las particiones</h3>

<p>Lo siguiente que haremos es montar las particiones para empezar a usarlas, primero la partici√≥n root (/), que en esta gu√≠a es sda3 y luego la partici√≥n boot/efi (/boot/efi) que ser√° sda1.</p>

<p>Si tenemos un disco <strong>SSD</strong> montamos las particiones usando las opciones de montaje adecuados para que se use TRIM:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>mount <span class="nt">-o</span> noatime,discard /dev/sda3 /mnt
<span class="nv">$ </span><span class="nb">mkdir</span> <span class="nt">-p</span> /mnt/boot/efi
<span class="nv">$ </span>mount <span class="nt">-o</span> noatime,discard /dev/sda1 /mnt/boot/efi
</code></pre></div></div>

<p>Si tenemos un disco <strong>HDD</strong> montamos las particiones de la siguiente forma:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>mount /dev/sda3 /mnt
<span class="nv">$ </span><span class="nb">mkdir</span> <span class="nt">-p</span> /mnt/boot/efi
<span class="nv">$ </span>mount /dev/sda1 /mnt/boot/efi
</code></pre></div></div>

<h3 id="18-instalar-paquetes-del-sistema-base">1.8. Instalar paquetes del sistema base</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>pacstrap <span class="nt">-i</span> /mnt linux linux-firmware linux-headers grub efibootmgr base base-devel <span class="nb">sudo </span>nano networkmanager
</code></pre></div></div>

<p>Nos dar√° elegir que paquetes queremos instalar. Presionar enter para que instale todo por defecto. Y luego ingresar ‚ÄúY‚Äù para confirmar.</p>

<h3 id="19-generando-el-fstab">1.9. Generando el FSTAB.</h3>

<p>Este archivo define c√≥mo deben montarse las particiones de disco en el sistema de archivos.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>genfstab <span class="nt">-U</span> <span class="nt">-p</span> /mnt <span class="o">&gt;</span> /mnt/etc/fstab
</code></pre></div></div>

<p>y comprobamos con:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">cat</span> <span class="o">!</span><span class="err">$</span>
</code></pre></div></div>

<h3 id="110-chroot-y-configuraci√≥n-de-sistema-base">1.10. Chroot y configuraci√≥n de sistema base</h3>

<p>Hacemos un chroot para cambiar el directorio root que estamos usando para configurar nuestro sistema.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>arch-chroot /mnt
</code></pre></div></div>

<p>Vamos a utilizar el comando <code class="language-plaintext highlighter-rouge">passwd</code> para definir una contrase√±a para el usuarios root</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>passwd
</code></pre></div></div>

<h3 id="111-crear-usuario">1.11. Crear Usuario</h3>

<p>Si ingresamos el comando <code class="language-plaintext highlighter-rouge">ls /home/</code> podemos ver que no existe ninguna carpeta de usuario.</p>

<p>Para crear un usuario vamos a utilizar el comando <code class="language-plaintext highlighter-rouge">useradd</code>. En este ejemplo nuestro usuario se llamar√° ‚Äúfoo‚Äù, ustedes reemplacen el nombre del usuario por el que quieran.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>useradd <span class="nt">-m</span> foo
</code></pre></div></div>

<p>Si ingresamos nuevamente el comando <code class="language-plaintext highlighter-rouge">ls /home/ -l</code> podemos ver que ahora hay una nueva carpeta con el nombre del usuario y esta tiene usuario y grupo ‚Äúfoo‚Äù, esto quiere decir que a parte del usuario root que tiene acceso a todo, nuestro nuevo usuario es el √∫nico due√±o de esta carpeta.</p>

<p>Cambiamos la contrase√±a con <code class="language-plaintext highlighter-rouge">passwd</code>:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>passwd foo
</code></pre></div></div>

<p>Ahora vamos a agregar a nuestro nuevo usuario al grupo wheel para que este pueda ser super usuario:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>usermod <span class="nt">-aG</span> wheel foo
</code></pre></div></div>

<p>Revisamos los grupos de nuestro usuario con el comando <code class="language-plaintext highlighter-rouge">groups</code>.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">groups </span>foo
</code></pre></div></div>

<p>Y nos deber√≠a aparecer algo como:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wheel foo
</code></pre></div></div>

<p>Ahora vamos a abrir el archivo sudoers que sa encuentra en <code class="language-plaintext highlighter-rouge">/etc/sudoers</code>.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>nano /etc/sudoers
</code></pre></div></div>

<p>Descomentamos la siguiente l√≠nea:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># %wheel ALL=(ALL) ALL</span>
</code></pre></div></div>

<p>Quitando el signo ‚Äú#‚Äù:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>%wheel <span class="nv">ALL</span><span class="o">=(</span>ALL<span class="o">)</span> ALL
</code></pre></div></div>

<p>Y guardamos el archivo. Con esta configuraci√≥n si ingresamos <code class="language-plaintext highlighter-rouge">sudo su</code>, el sistema nos pedir√© la contrase√±a del usuario antes de convertirlo en root.</p>

<p>Para cambiar de usuario ocupamos el comando <code class="language-plaintext highlighter-rouge">su</code> y el nombre del usuario.</p>

<p>A modo de prueba nos cambiamos de usuario:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>su foo
</code></pre></div></div>

<p>Podemos verificar nuestro usuario con el comando <code class="language-plaintext highlighter-rouge">whoami</code>.</p>

<p>Ahora ingresemos el comando <code class="language-plaintext highlighter-rouge">sudo su</code></p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>su
</code></pre></div></div>

<p>Nos pedir√° contrase√±a la contrase√±a de nuestro usuario, la ingresamos y nuestro usuario ser√° root nuevamente.</p>

<p>Para salir de estos usuarios:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">exit</span>
<span class="nv">$ </span><span class="nb">exit</span>
</code></pre></div></div>

<h3 id="112-vamos-a-establecer-la-regi√≥n-del-teclado">1.12. Vamos a establecer la regi√≥n del teclado</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>nano /etc/locale.gen
</code></pre></div></div>

<p>Hacemos ctrl+w para buscar, y filtramos por <code class="language-plaintext highlighter-rouge">en_US.UTF-8 UTF-8</code>. Esta l√≠nea la vamos a descomentar.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#en_US.UTF-8 UTF-8</span>
</code></pre></div></div>

<p>Quedando de esta forma:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>en_US.UTF-8 UTF-8
</code></pre></div></div>

<p>Y haremos lo mismo con <code class="language-plaintext highlighter-rouge">es_CL.UTF-8 UTF-8</code> en el caso de Chile o <code class="language-plaintext highlighter-rouge">es_ES.UTF-8 UTF-8</code> para el caso de Espa√±a.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#es_CL.UTF-8 UTF-8</span>
</code></pre></div></div>

<p>Quedando de esta forma:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>es_CL.UTF-8 UTF-8
</code></pre></div></div>

<p>Una vez realizados los cambios, guardamos el archivo.</p>

<p>Ahora ingresamos el siguiente comando para aplicar los cambios:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>locale-gen
</code></pre></div></div>

<p>La salida por pantalla deber√≠a ser algo como esto:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Generating locales...
  en_US.UTF-8... <span class="k">done
  </span>es_CL.UTF-8.. <span class="k">done
</span>Generation complete.
</code></pre></div></div>

<p>Para evitar ingresar a cada rato el comando <code class="language-plaintext highlighter-rouge">loadkeys es</code> vamos a editar el archivo <code class="language-plaintext highlighter-rouge">/etc/vconsole.conf</code> para cambiar el mapa de teclas de las terminales TTY:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>nano /etc/vconsole.conf
</code></pre></div></div>

<p>Ingresamos lo siguiente:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">KEYMAP</span><span class="o">=</span>es
</code></pre></div></div>

<p>y guardamos el archivo.</p>

<p>Con esto, la pr√≥xima vez que reinicies el equipo, va a estar en espa√±ol el teclado.</p>

<p>Para m√°s informaci√≥n respecto a este tema te dejo el link de la documentaci√≥n oficial de archlinux: <a href="https://wiki.archlinux.org/title/Linux_console/Keyboard_configuration">Linux console/Keyboard configuration</a></p>

<h3 id="113-establecer-la-zona-horaria">1.13. Establecer la zona horaria</h3>

<p>Establecemos la zona horaria de nuestro sistema:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">ln</span> <span class="nt">-s</span> /usr/share/zoneinfo/America/Santiago /etc/localtime
</code></pre></div></div>

<p>Configuramos el reloj de hardware en modo UTC:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>hwclock <span class="nt">--systohc</span> <span class="nt">--utc</span>
</code></pre></div></div>

<h3 id="114-modificar-el-nombre-de-nuesta-m√°quina">1.14. Modificar el nombre de nuesta m√°quina</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">echo </span>archlinux <span class="o">&gt;</span> /etc/hostname
</code></pre></div></div>

<h3 id="115-configurar-el-archivo-hosts">1.15. Configurar el archivo hosts</h3>

<p>Abrimos el archivo hosts:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>nano /etc/hosts
</code></pre></div></div>

<p>Ingresamos el siguiente contenido al final del archivo:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>127.0.0.1     localhost
::1           localhost
</code></pre></div></div>

<p>Guardamos el archivo.</p>

<p>Comprobamos que el archivo qued√≥ correctamente escrito:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">cat</span> /etc/hosts
</code></pre></div></div>

<h3 id="116-instalar-el-gestor-de-arranque-boot-loader">1.16. Instalar el gestor de arranque (Boot loader)</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>grub-install /dev/sda
</code></pre></div></div>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>nano /etc/default/grub
</code></pre></div></div>

<p>Editamos el archivo <code class="language-plaintext highlighter-rouge">/etc/default/grub</code> para descomentar/agregar la l√≠nea <code class="language-plaintext highlighter-rouge">GRUB_DISABLE_OS_PROBER=false</code>, guardamos y ejecutamos el siguiente comando para crear el archivo de configuraci√≥n del grub:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>grub-mkconfig <span class="nt">-o</span> /boot/grub/grub.cfg
</code></pre></div></div>

<p><strong>Nota:</strong> -o es letra y no el n√∫mero cero.</p>

<h3 id="117-finalizar-la-instalaci√≥n">1.17. Finalizar la instalaci√≥n</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">exit</span>
<span class="nv">$ </span>reboot
</code></pre></div></div>

<p>Si quieres ver la Gu√≠a oficial de instalaci√≥n de Arch Linux <a href="https://wiki.archlinux.org/index.php/Install_guide">pincha aqu√≠</a>.</p>

<h2 id="2-post-instalaci√≥n-base">2. Post instalaci√≥n base</h2>

<h3 id="21-habilitar-servicio-networkmanager">2.1. Habilitar servicio NetworkManager</h3>

<p>Luego de iniciar sesi√≥n con nuestro usuario, lo primero que vamos a hacer es habilitar el servicio NetworkManager:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>NetworkManager.service
</code></pre></div></div>

<p>Una vez realizado esto, reiniciamos la m√°quina:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>reboot
</code></pre></div></div>

<p>tambi√©n podemos reiniciar la m√°quina con:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>shutdown <span class="nt">-r</span> now
</code></pre></div></div>

<p>Una vez reiniciada, nos logueamos nuevamente y probamos conectividad con la red.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>ping <span class="nt">-c</span> 3 www.google.com
64 bytes from www.google.com <span class="o">(</span>74.125.224.113<span class="o">)</span>: <span class="nv">icmp_seq</span><span class="o">=</span>3 <span class="nv">ttl</span><span class="o">=</span>57 <span class="nb">time</span><span class="o">=</span>27.5 ms
</code></pre></div></div>

<h3 id="22-sincronizar-las-bases-de-datos-de-paquetes">2.2. Sincronizar las bases de datos de paquetes</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-Syu</span>
</code></pre></div></div>

<h3 id="23-instalar-neofetch">2.3. Instalar neofetch</h3>

<p>Es un paquete que al ejecutarse en la terminal recopila informaci√≥n del sistema y la muestra al usuario de forma amigable, incluyendo un logotipo de la distro que se est√° utilizando en formato ASCII.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> neofetch
</code></pre></div></div>

<p>Una vez instalado, lo ejecutamos con el comando <code class="language-plaintext highlighter-rouge">neofetch</code>.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>neofetch
</code></pre></div></div>

<h3 id="24-xorg">2.4. Xorg</h3>

<p>Antes de instalar el entorno de escritorio vamos a instalar el servidor de visualizaci√≥n y algunas utilidades:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> xorg xorg-server xorg-apps xorg-xinit xterm <span class="nt">--noconfirm</span>
</code></pre></div></div>

<p>Una vez finalizada la instalaci√≥n ingresamos el siguiente comando para verificar que todo este bien:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>startx
</code></pre></div></div>

<p>Si nos muestra tres terminales con fondo de color blanco, es por que la instalaci√≥n finalizo correctamente y podemos salir ingresando ‚Äúexit‚Äù.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">exit</span>
</code></pre></div></div>

<h3 id="25-intel-graphics---xorg-drivers">2.5. Intel graphics - Xorg Drivers</h3>

<p>Prerequisito: Xorg.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> xf86-video-intel xf86-input-synaptics
</code></pre></div></div>

<h3 id="26-lightdm">2.6. LightDM</h3>

<p>LightDM es un ligero y r√°pido gestor de sesiones para X Window System. Vamos a ingresar los siguientes comandos:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> lightdm-gtk-greeter lightdm-service
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>lightdm.service
<span class="nv">$ </span><span class="nb">sudo </span>reboot
</code></pre></div></div>

<h3 id="27-para-instalar-gnome-desktop">2.7. Para instalar Gnome Desktop</h3>

<p>Tenemos dos opciones, instalar Gnome sin programas por defecto preinstalados o con todos los programas por defecto preinstalados</p>

<p><strong>Instalaci√≥n m√≠mima</strong></p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> gnome-control-center gdm
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>gdm.service
<span class="nv">$ </span><span class="nb">sudo </span>reboot
</code></pre></div></div>

<p><strong>Instalaci√≥n completa</strong></p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> gnome
</code></pre></div></div>

<p>Nos preguntar√° sobre algunos paquetes, dejaremos todo por defecto. Vamos a presionar enter a todo.</p>

<p>Una vez finalizada la instalaci√≥n ingresaremos este comando para asegurarnos que en la pantalla de inicio de sesi√≥n el teclado est√© configurado en espa√±ol (o el lenguaje que queramos):</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>localectl set-x11-keymap es
</code></pre></div></div>

<p>Finalmente habilitamos el servicio de Gnome y reiniciamos el equipo.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>gdm.service
<span class="nv">$ </span><span class="nb">sudo </span>reboot
</code></pre></div></div>

<h3 id="28-algunos-paquetes-recomendables">2.8. Algunos paquetes recomendables.</h3>

<ul>
  <li>
    <p><code class="language-plaintext highlighter-rouge">gufw</code>: Firewall.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">unrar</code>: Utilidad de descompresi√≥n de archivos .rar.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">git</code>: El sistema de control de versiones m√°s utilizado hoy en d√≠a por desarrolladores de software.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">vim</code>: Potente editor de texto. Versi√≥n mejorada del editor Vi.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">wget</code>: Descarga archivos usando los protocolos de internet m√°s usados como son HTTP, HTTPS, FPT, FTPS.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">zsh</code>: Potente int√©rprete de comandos.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">nmap</code>: Permite revisar los puertos de una m√°quina.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">net-tools</code>: Permite usar comandos como el ifconfig, entre otros.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">htop</code>: Completo sistema de monitorizaci√≥n.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">mlocate</code>: Permite hacer b√∫squeda de archivos en cualquier parte del sistema.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">tree</code>: Paquete para visualizar de manera r√°pida el √°rbol de carpetas/directorios.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">ntfs-3g</code>: Soporte para dispositivos externos (pendrive y otros) que usen sistema de archivos NTFS.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">gvfs-smb</code>: Implementaci√≥n del sistema de archivos virtual para GIO (backend SMB/CIFS; cliente de Windows)</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">gvfs-mtp</code>: Este paquete da soporte para el protocolo de transferencia de datos multimedia MTP (Multimedia Transfer Protocol) de los sistemas Android.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">psensor</code>: Programa que monitorea la temperatura del hardware del equipo.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">dmidecode</code>: Herramienta que permite obtener informaci√≥n de los componentes de hardware del sistema.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">terminator</code>: Terminator es un emulador de terminal muy completo. Una de sus caracteristicas m√°s destacables es que permite hacer split de la ventana para abrir multiples terminales.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">bleachbit</code>: Bleachbit Es una herramienta de limpieza del disco duro.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">vlc</code>: Reproductor multimedia que reproduce la mayor√≠a de los archivos multimedia gracias a tiene la mayor√≠a de codecs necesarios.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">gnome-tweak-tool</code>: Herramienta para configurar la apariencia de Gnome.</p>
  </li>
</ul>

<p>Instalaci√≥n:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> gufw unrar git vim wget zsh nmap net-tools htop mlocate tree  <span class="se">\</span>
ntfs-3g gvfs-smb gvfs-mtp psensor dmidecode terminator bleachbit vlc gnome-tweak-tool
</code></pre></div></div>

<h3 id="29-wallpapers-y-fuentes">2.9. Wallpapers y fuentes</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> archlinux-wallpaper powerline-fonts nerd-fonts ttf-liberation ttf-dejavu ttf-freefont
</code></pre></div></div>

<h3 id="210-oh-my-zsh">2.10. Oh My Zsh</h3>

<p>Oh My Zsh es un framework para la gesti√≥n de la configuraci√≥n de Zsh. Permite instalar temas, plugins, helpers, etc f√°cilmente. Es open source.</p>

<p>Para instalarlo:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>sh <span class="nt">-c</span> <span class="s2">"</span><span class="si">$(</span>curl <span class="nt">-fsSL</span> https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh<span class="si">)</span><span class="s2">"</span>
</code></pre></div></div>

<p><a href="https://github.com/robbyrussell/oh-my-zsh">oh-my-zsh - repositorio</a></p>

<p><a href="https://ohmyz.sh/">sitio web oficial</a></p>

<h3 id="si-el-sistema-est√°-instalado-en-una-vm-de-virtualbox">Si el sistema est√° instalado en una VM de Virtualbox</h3>

<h4 id="virtualbox-guest-additions">Virtualbox Guest Additions</h4>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> virtualbox-guest-utils
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>vboxservice.service
</code></pre></div></div>]]></content><author><name></name></author><category term="linux" /><category term="arch-linux" /><category term="Linux" /><category term="Arch Linux" /><summary type="html"><![CDATA[Esta es una gu√≠a paso a paso de como instalar Arch Linux 2022.06.01 x86_64. Con esta gu√≠a el usuario ser√° capaz de cambiar el idioma del teclado, particionar el disco, realizar la instalaci√≥n de un entorno de escritorio y m√°s, todo el proceso se realiza por l√≠nea de comandos. 1. Instalaci√≥n base Vamos a seleccionar la primera opci√≥n ‚ÄúArch Linux install medium (x86_64, BIOS)‚Äù 1.1 Deshabilitar el molesto sonido de las teclas del teclado $ rmmod pcspkr 1.2 Cambiar el idioma del teclado a espa√±ol. $ loadkeys es 1.3. Probando conectividad con la red. $ ping -c 3 www.google.com 64 bytes from www.google.com (74.125.224.113): icmp_seq=3 ttl=57 time=27.5 ms 1.4. Particionar el disco $ fdisk -l $ cfdisk /dev/sda Seleccionar label ‚Äúuefi‚Äù. Si tenemos un sistema con 8 GiB o m√°s de memoria probablemente podamos prescindir de la partici√≥n de swap. Sino podemos crear una. Crearemos las siguientes particiones: Tama√±o Tipo 250M EFI System 4G Linux swap resto Linux, primaria A continuaci√≥n vamos a crear nuestra primera partici√≥n; Para esto debemos seguir los siguientes pasos: -&gt; Con la tecla ‚Äúenter‚Äù seleccionar el espacio libre del disco y seleccionar ‚ÄúNew‚Äù -&gt; Partition size: 250M -&gt; Seleccionar [Type] -&gt; Seleccionar [EFI System] Vamos a crear la segunda partici√≥n: -&gt; Presionamos la tecla de la flecha hacia abajo para seleccionar el espacio libre del disco y ‚Äúenter‚Äù para seleccionar ‚ÄúNew‚Äù -&gt; Partition size: 4G -&gt; Seleccionar [Type] -&gt; Seleccionar ‚ÄúLinux swap‚Äù Ahora crearemos la √∫ltima partici√≥n: -&gt; Seleccionar el espacio libre del disco y seleccionar ‚ÄúNew‚Äù -&gt; En ‚ÄúPartition size: ‚Äú nos sugerir√° lo que nos queda de espacio libre. Presionamos enter para asignar ese tama√±o a nuestra nueva partici√≥n. Por defecto asignar√° tipo ‚ÄúLinux filesystem‚Äù, eso est√° bien, lo dejamos como est√°. Finalmente -&gt; Seleccionar [Write] -&gt; Para confirmar igresamos ‚Äúyes‚Äù y presionamos la tecla enter. -&gt; Seleccionar [Quit] Si ejecutamos el comando lsblk podemos ver lo que hemos definido. 1.5. Formateando las particiones 1.5.1. Formatear la partici√≥n EFI $ mkfs.fat -F32 /dev/sda1 1.5.2. Formatear la partici√≥n / $ mkfs.ext4 /dev/sda3 1.6. Crear y activar la swap Creamos la swap o espacio de intercambio: $ mkswap /dev/sda2 Y activamos la swap: $ swapon /dev/sda2 1.7. Montar las particiones Lo siguiente que haremos es montar las particiones para empezar a usarlas, primero la partici√≥n root (/), que en esta gu√≠a es sda3 y luego la partici√≥n boot/efi (/boot/efi) que ser√° sda1. Si tenemos un disco SSD montamos las particiones usando las opciones de montaje adecuados para que se use TRIM: $ mount -o noatime,discard /dev/sda3 /mnt $ mkdir -p /mnt/boot/efi $ mount -o noatime,discard /dev/sda1 /mnt/boot/efi Si tenemos un disco HDD montamos las particiones de la siguiente forma: $ mount /dev/sda3 /mnt $ mkdir -p /mnt/boot/efi $ mount /dev/sda1 /mnt/boot/efi 1.8. Instalar paquetes del sistema base $ pacstrap -i /mnt linux linux-firmware linux-headers grub efibootmgr base base-devel sudo nano networkmanager Nos dar√° elegir que paquetes queremos instalar. Presionar enter para que instale todo por defecto. Y luego ingresar ‚ÄúY‚Äù para confirmar. 1.9. Generando el FSTAB. Este archivo define c√≥mo deben montarse las particiones de disco en el sistema de archivos. $ genfstab -U -p /mnt &gt; /mnt/etc/fstab y comprobamos con: $ cat !$ 1.10. Chroot y configuraci√≥n de sistema base Hacemos un chroot para cambiar el directorio root que estamos usando para configurar nuestro sistema. $ arch-chroot /mnt Vamos a utilizar el comando passwd para definir una contrase√±a para el usuarios root $ passwd 1.11. Crear Usuario Si ingresamos el comando ls /home/ podemos ver que no existe ninguna carpeta de usuario. Para crear un usuario vamos a utilizar el comando useradd. En este ejemplo nuestro usuario se llamar√° ‚Äúfoo‚Äù, ustedes reemplacen el nombre del usuario por el que quieran. $ useradd -m foo Si ingresamos nuevamente el comando ls /home/ -l podemos ver que ahora hay una nueva carpeta con el nombre del usuario y esta tiene usuario y grupo ‚Äúfoo‚Äù, esto quiere decir que a parte del usuario root que tiene acceso a todo, nuestro nuevo usuario es el √∫nico due√±o de esta carpeta. Cambiamos la contrase√±a con passwd: $ passwd foo Ahora vamos a agregar a nuestro nuevo usuario al grupo wheel para que este pueda ser super usuario: $ usermod -aG wheel foo Revisamos los grupos de nuestro usuario con el comando groups. $ groups foo Y nos deber√≠a aparecer algo como: wheel foo Ahora vamos a abrir el archivo sudoers que sa encuentra en /etc/sudoers. $ nano /etc/sudoers Descomentamos la siguiente l√≠nea: # %wheel ALL=(ALL) ALL Quitando el signo ‚Äú#‚Äù: %wheel ALL=(ALL) ALL Y guardamos el archivo. Con esta configuraci√≥n si ingresamos sudo su, el sistema nos pedir√© la contrase√±a del usuario antes de convertirlo en root. Para cambiar de usuario ocupamos el comando su y el nombre del usuario. A modo de prueba nos cambiamos de usuario: $ su foo Podemos verificar nuestro usuario con el comando whoami. Ahora ingresemos el comando sudo su $ sudo su Nos pedir√° contrase√±a la contrase√±a de nuestro usuario, la ingresamos y nuestro usuario ser√° root nuevamente. Para salir de estos usuarios: $ exit $ exit 1.12. Vamos a establecer la regi√≥n del teclado $ nano /etc/locale.gen Hacemos ctrl+w para buscar, y filtramos por en_US.UTF-8 UTF-8. Esta l√≠nea la vamos a descomentar. #en_US.UTF-8 UTF-8 Quedando de esta forma: en_US.UTF-8 UTF-8 Y haremos lo mismo con es_CL.UTF-8 UTF-8 en el caso de Chile o es_ES.UTF-8 UTF-8 para el caso de Espa√±a. #es_CL.UTF-8 UTF-8 Quedando de esta forma: es_CL.UTF-8 UTF-8 Una vez realizados los cambios, guardamos el archivo. Ahora ingresamos el siguiente comando para aplicar los cambios: $ locale-gen La salida por pantalla deber√≠a ser algo como esto: Generating locales... en_US.UTF-8... done es_CL.UTF-8.. done Generation complete. Para evitar ingresar a cada rato el comando loadkeys es vamos a editar el archivo /etc/vconsole.conf para cambiar el mapa de teclas de las terminales TTY: $ nano /etc/vconsole.conf Ingresamos lo siguiente: KEYMAP=es y guardamos el archivo. Con esto, la pr√≥xima vez que reinicies el equipo, va a estar en espa√±ol el teclado. Para m√°s informaci√≥n respecto a este tema te dejo el link de la documentaci√≥n oficial de archlinux: Linux console/Keyboard configuration 1.13. Establecer la zona horaria Establecemos la zona horaria de nuestro sistema: $ ln -s /usr/share/zoneinfo/America/Santiago /etc/localtime Configuramos el reloj de hardware en modo UTC: $ hwclock --systohc --utc 1.14. Modificar el nombre de nuesta m√°quina $ echo archlinux &gt; /etc/hostname 1.15. Configurar el archivo hosts Abrimos el archivo hosts: $ nano /etc/hosts Ingresamos el siguiente contenido al final del archivo: 127.0.0.1 localhost ::1 localhost Guardamos el archivo. Comprobamos que el archivo qued√≥ correctamente escrito: $ cat /etc/hosts 1.16. Instalar el gestor de arranque (Boot loader) $ grub-install /dev/sda $ nano /etc/default/grub Editamos el archivo /etc/default/grub para descomentar/agregar la l√≠nea GRUB_DISABLE_OS_PROBER=false, guardamos y ejecutamos el siguiente comando para crear el archivo de configuraci√≥n del grub: $ grub-mkconfig -o /boot/grub/grub.cfg Nota: -o es letra y no el n√∫mero cero. 1.17. Finalizar la instalaci√≥n $ exit $ reboot Si quieres ver la Gu√≠a oficial de instalaci√≥n de Arch Linux pincha aqu√≠. 2. Post instalaci√≥n base 2.1. Habilitar servicio NetworkManager Luego de iniciar sesi√≥n con nuestro usuario, lo primero que vamos a hacer es habilitar el servicio NetworkManager: $ sudo systemctl enable NetworkManager.service Una vez realizado esto, reiniciamos la m√°quina: $ sudo reboot tambi√©n podemos reiniciar la m√°quina con: $ sudo shutdown -r now Una vez reiniciada, nos logueamos nuevamente y probamos conectividad con la red. $ ping -c 3 www.google.com 64 bytes from www.google.com (74.125.224.113): icmp_seq=3 ttl=57 time=27.5 ms 2.2. Sincronizar las bases de datos de paquetes $ sudo pacman -Syu 2.3. Instalar neofetch Es un paquete que al ejecutarse en la terminal recopila informaci√≥n del sistema y la muestra al usuario de forma amigable, incluyendo un logotipo de la distro que se est√° utilizando en formato ASCII. $ sudo pacman -S neofetch Una vez instalado, lo ejecutamos con el comando neofetch. $ neofetch 2.4. Xorg Antes de instalar el entorno de escritorio vamos a instalar el servidor de visualizaci√≥n y algunas utilidades: $ sudo pacman -S xorg xorg-server xorg-apps xorg-xinit xterm --noconfirm Una vez finalizada la instalaci√≥n ingresamos el siguiente comando para verificar que todo este bien: $ startx Si nos muestra tres terminales con fondo de color blanco, es por que la instalaci√≥n finalizo correctamente y podemos salir ingresando ‚Äúexit‚Äù. $ exit 2.5. Intel graphics - Xorg Drivers Prerequisito: Xorg. $ sudo pacman -S xf86-video-intel xf86-input-synaptics 2.6. LightDM LightDM es un ligero y r√°pido gestor de sesiones para X Window System. Vamos a ingresar los siguientes comandos: $ sudo pacman -S lightdm-gtk-greeter lightdm-service $ sudo systemctl enable lightdm.service $ sudo reboot 2.7. Para instalar Gnome Desktop Tenemos dos opciones, instalar Gnome sin programas por defecto preinstalados o con todos los programas por defecto preinstalados Instalaci√≥n m√≠mima $ sudo pacman -S gnome-control-center gdm $ sudo systemctl enable gdm.service $ sudo reboot Instalaci√≥n completa $ sudo pacman -S gnome Nos preguntar√° sobre algunos paquetes, dejaremos todo por defecto. Vamos a presionar enter a todo. Una vez finalizada la instalaci√≥n ingresaremos este comando para asegurarnos que en la pantalla de inicio de sesi√≥n el teclado est√© configurado en espa√±ol (o el lenguaje que queramos): $ sudo localectl set-x11-keymap es Finalmente habilitamos el servicio de Gnome y reiniciamos el equipo. $ sudo systemctl enable gdm.service $ sudo reboot 2.8. Algunos paquetes recomendables. gufw: Firewall. unrar: Utilidad de descompresi√≥n de archivos .rar. git: El sistema de control de versiones m√°s utilizado hoy en d√≠a por desarrolladores de software. vim: Potente editor de texto. Versi√≥n mejorada del editor Vi. wget: Descarga archivos usando los protocolos de internet m√°s usados como son HTTP, HTTPS, FPT, FTPS. zsh: Potente int√©rprete de comandos. nmap: Permite revisar los puertos de una m√°quina. net-tools: Permite usar comandos como el ifconfig, entre otros. htop: Completo sistema de monitorizaci√≥n. mlocate: Permite hacer b√∫squeda de archivos en cualquier parte del sistema. tree: Paquete para visualizar de manera r√°pida el √°rbol de carpetas/directorios. ntfs-3g: Soporte para dispositivos externos (pendrive y otros) que usen sistema de archivos NTFS. gvfs-smb: Implementaci√≥n del sistema de archivos virtual para GIO (backend SMB/CIFS; cliente de Windows) gvfs-mtp: Este paquete da soporte para el protocolo de transferencia de datos multimedia MTP (Multimedia Transfer Protocol) de los sistemas Android. psensor: Programa que monitorea la temperatura del hardware del equipo. dmidecode: Herramienta que permite obtener informaci√≥n de los componentes de hardware del sistema. terminator: Terminator es un emulador de terminal muy completo. Una de sus caracteristicas m√°s destacables es que permite hacer split de la ventana para abrir multiples terminales. bleachbit: Bleachbit Es una herramienta de limpieza del disco duro. vlc: Reproductor multimedia que reproduce la mayor√≠a de los archivos multimedia gracias a tiene la mayor√≠a de codecs necesarios. gnome-tweak-tool: Herramienta para configurar la apariencia de Gnome. Instalaci√≥n: $ sudo pacman -S gufw unrar git vim wget zsh nmap net-tools htop mlocate tree \ ntfs-3g gvfs-smb gvfs-mtp psensor dmidecode terminator bleachbit vlc gnome-tweak-tool 2.9. Wallpapers y fuentes $ sudo pacman -S archlinux-wallpaper powerline-fonts nerd-fonts ttf-liberation ttf-dejavu ttf-freefont 2.10. Oh My Zsh Oh My Zsh es un framework para la gesti√≥n de la configuraci√≥n de Zsh. Permite instalar temas, plugins, helpers, etc f√°cilmente. Es open source. Para instalarlo: $ sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" oh-my-zsh - repositorio sitio web oficial Si el sistema est√° instalado en una VM de Virtualbox Virtualbox Guest Additions $ sudo pacman -S virtualbox-guest-utils $ sudo systemctl enable vboxservice.service]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://aduartem.github.io/assets/images/posts/2018/f34a2f25-c4f4-4dae-927f-d08ecf25e07b.png" /><media:content medium="image" url="https://aduartem.github.io/assets/images/posts/2018/f34a2f25-c4f4-4dae-927f-d08ecf25e07b.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Gu√≠a de instalaci√≥n de Arch Linux 2022.06.01 x86_64 (Boot)</title><link href="https://aduartem.github.io/linux/arch-linux/2022/06/24/guia-de-instalacion-de-arch-linux-2022.06.01-x86_64-BIOS.html" rel="alternate" type="text/html" title="Gu√≠a de instalaci√≥n de Arch Linux 2022.06.01 x86_64 (Boot)" /><published>2022-06-24T00:00:00+00:00</published><updated>2022-06-24T00:00:00+00:00</updated><id>https://aduartem.github.io/linux/arch-linux/2022/06/24/guia-de-instalacion-de-arch-linux-2022.06.01-x86_64-BIOS</id><content type="html" xml:base="https://aduartem.github.io/linux/arch-linux/2022/06/24/guia-de-instalacion-de-arch-linux-2022.06.01-x86_64-BIOS.html"><![CDATA[<p>Esta es una gu√≠a paso a paso de como instalar Arch Linux 2022.06.01 x86_64. Con esta gu√≠a el usuario ser√° capaz de cambiar el idioma del teclado, particionar el disco, realizar la instalaci√≥n de un entorno de escritorio y m√°s, todo el proceso se realiza por l√≠nea de comandos.</p>

<h2 id="1-instalaci√≥n-base">1. Instalaci√≥n base</h2>

<p>Vamos a seleccionar la primera opci√≥n ‚ÄúArch Linux install medium (x86_64, BIOS)‚Äù</p>

<h3 id="11-deshabilitar-el-molesto-sonido-de-las-teclas-del-teclado">1.1 Deshabilitar el molesto sonido de las teclas del teclado</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>rmmod pcspkr
</code></pre></div></div>

<h3 id="12-cambiar-el-idioma-del-teclado-a-espa√±ol">1.2 Cambiar el idioma del teclado a espa√±ol.</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>loadkeys es
</code></pre></div></div>

<h3 id="13-probando-conectividad-con-la-red">1.3. Probando conectividad con la red.</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>ping <span class="nt">-c</span> 3 www.google.com
64 bytes from www.google.com <span class="o">(</span>74.125.224.113<span class="o">)</span>: <span class="nv">icmp_seq</span><span class="o">=</span>3 <span class="nv">ttl</span><span class="o">=</span>57 <span class="nb">time</span><span class="o">=</span>27.5 ms
</code></pre></div></div>

<h3 id="14-particiones-de-disco-duro-basadas-en-bios">1.4. Particiones de disco duro basadas en BIOS</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>fdisk <span class="nt">-l</span>
</code></pre></div></div>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>cfdisk /dev/sda
</code></pre></div></div>

<p>Seleccionar label ‚Äú<strong>dos</strong>‚Äù.</p>

<p>Si tenemos un sistema con 8 GiB o m√°s de memoria probablemente podamos prescindir de la partici√≥n de swap. Sino debemos crear una.</p>

<p>Crearemos las siguientes particiones:</p>

<table>
  <thead>
    <tr>
      <th>Tama√±o</th>
      <th>Tipo</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>250 M</td>
      <td>Boot, primaria</td>
    </tr>
    <tr>
      <td>4 G</td>
      <td>Linux swap, primaria</td>
    </tr>
    <tr>
      <td>resto</td>
      <td>Linux, primaria</td>
    </tr>
  </tbody>
</table>

<p>En esta gu√≠a crearemos las 3 particiones primarias del segundo caso.</p>

<p>Solo puede crear cuatro particiones primarias en cualquier disco duro f√≠sico. Este l√≠mite de partici√≥n se extiende a la partici√≥n de intercambio de Linux, as√≠ como a cualquier instalaci√≥n de sistema operativo o particiones con fines especiales adicionales, como /root, /home, /boot, etc., que desee crear. Si por alguna raz√≥n necesitamos m√°s particiones podemos ocupar una partici√≥n extendida.</p>

<p>Partici√≥n Extendida:</p>
<ul>
  <li>Es un tipo especial de partici√≥n que contiene ‚Äúespacio libre‚Äù en el que se pueden crear m√°s de las cuatro particiones primarias.</li>
  <li>Dentro de la partici√≥n extendida podemos crear varias particiones, estas se llaman particiones l√≥gicas. Podemos crear N particiones l√≥gicas dentro de una partici√≥n extendida. Algunas convenciones al respecto:
    <ul>
      <li>Si va a crear una particion extendida, debemos tener m√°ximo tres particiones primarias.</li>
      <li>S√≥lo se debe crear una partici√≥n extendida en un disco duro (aunque puede tener una partici√≥n extendida en cada uno de los discos duros del sistema)</li>
      <li>Una partici√≥n extendida no se puede formatear con un sistema de archivos como ext4, FAT o NTFS, ni puede contener datos directamente. Esa es la funci√≥n de las unidades l√≥gicas que se crean dentro de √©l.</li>
    </ul>
  </li>
</ul>

<p>A continuaci√≥n vamos a crear nuestra primera partici√≥n; Para esto debemos seguir los siguientes pasos:<br />
-&gt; Con la tecla ‚Äúenter‚Äù seleccionar el espacio libre del disco y seleccionar ‚ÄúNew‚Äù<br />
-&gt; Partition size: 250M<br />
-&gt; Seleccionar [primary]<br />
-&gt; Seleccionar [Bootable]<br /></p>

<p>Ahora crearemos la segunda partici√≥n:
-&gt; Presionamos la tecla de la flecha hacia abajo para seleccionar el espacio libre del disco y ‚Äúenter‚Äù para seleccionar ‚ÄúNew‚Äù<br />
-&gt; Partition size: 4G<br />
-&gt; Seleccionar [primary]<br />
-&gt; Seleccionar [Type]<br />
-&gt; Seleccionar ‚Äú82 Linux swap / Solaris‚Äù<br /></p>

<p>Ahora crearemos la √∫ltima partici√≥n:
-&gt; Seleccionar el espacio libre del disco y seleccionar ‚ÄúNew‚Äù<br />
-&gt; En ‚ÄúPartition size: ‚Äú nos sugerir√° lo que nos queda de espacio libre. Presionamos enter para asignar ese tama√±o a nuestra nueva partici√≥n.<br />
-&gt; Seleccionar [primary]<br /></p>

<p>Finalmente
-&gt; Seleccionar [Write]<br />
-&gt; Para confirmar igresamos ‚Äúyes‚Äù y presionamos la tecla enter.<br />
-&gt; Seleccionar [Quit]<br /></p>

<p>Si ejecutamos el comando <code class="language-plaintext highlighter-rouge">lsblk</code> podemos ver lo que hemos definido.</p>

<h3 id="15-formateando-las-particiones">1.5. Formateando las particiones</h3>

<h4 id="151-formatear-la-partici√≥n-boot">1.5.1. Formatear la partici√≥n Boot</h4>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>mkfs.ext3 /dev/sda1
</code></pre></div></div>

<h4 id="152-formatear-la-partici√≥n-">1.5.2. Formatear la partici√≥n /</h4>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>mkfs.ext4 /dev/sda3
</code></pre></div></div>

<h4 id="16-crear-y-activar-la-swap">1.6. Crear y activar la swap</h4>

<p>Creamos la swap o espacio de intercambio:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>mkswap /dev/sda2
</code></pre></div></div>

<p>Y activamos la swap:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>swapon /dev/sda2
</code></pre></div></div>

<h3 id="17-montar-las-particiones">1.7. Montar las particiones</h3>

<p>Lo siguiente que haremos es montar las particiones para empezar a usarlas, primero la partici√≥n root (/), que en esta gu√≠a es sda3 y luego la partici√≥n boot (/boot) que ser√° sda1.</p>

<p>Si tenemos un disco <strong>SSD</strong> montamos las particiones usando las opciones de montaje adecuados para que se use TRIM:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>mount <span class="nt">-o</span> noatime,discard /dev/sda3 /mnt
<span class="nv">$ </span><span class="nb">mkdir</span> <span class="nt">-p</span> /mnt/boot
<span class="nv">$ </span>mount <span class="nt">-o</span> noatime,discard /dev/sda1 /mnt/boot
</code></pre></div></div>

<p>Si tenemos un disco <strong>HDD</strong> montamos las particiones de la siguiente forma:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>mount /dev/sda3 /mnt
<span class="nv">$ </span><span class="nb">mkdir</span> <span class="nt">-p</span> /mnt/boot
<span class="nv">$ </span>mount /dev/sda1 /mnt/boot
</code></pre></div></div>

<h3 id="18-instalar-paquetes-del-sistema-base">1.8. Instalar paquetes del sistema base</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>pacstrap <span class="nt">-i</span> /mnt linux linux-firmware linux-headers grub base base-devel <span class="nb">sudo </span>nano networkmanager wpa_supplicant
</code></pre></div></div>

<p>Nos dar√° elegir que paquetes queremos instalar. Presionar enter para que instale todo por defecto. Y luego ingresar ‚ÄúY‚Äù para confirmar.</p>

<h3 id="19-generando-el-fstab">1.9. Generando el FSTAB.</h3>

<p>Este archivo define c√≥mo deben montarse las particiones de disco en el sistema de archivos.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>genfstab <span class="nt">-U</span> <span class="nt">-p</span> /mnt <span class="o">&gt;</span> /mnt/etc/fstab
</code></pre></div></div>

<p>y comprobamos con:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">cat</span> <span class="o">!</span><span class="err">$</span>
</code></pre></div></div>

<h3 id="110-chroot-y-configuraci√≥n-de-sistema-base">1.10. Chroot y configuraci√≥n de sistema base</h3>

<p>Hacemos un chroot para cambiar el directorio root que estamos usando para configurar nuestro sistema.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>arch-chroot /mnt
</code></pre></div></div>

<p>Vamos a utilizar el comando <code class="language-plaintext highlighter-rouge">passwd</code> para definir una contrase√±a para el usuarios root</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>passwd
</code></pre></div></div>

<h3 id="111-crear-usuario">1.11. Crear Usuario</h3>

<p>Si ingresamos el comando <code class="language-plaintext highlighter-rouge">ls /home/</code> podemos ver que no existe ninguna carpeta de usuario.</p>

<p>Para crear un usuario vamos a utilizar el comando <code class="language-plaintext highlighter-rouge">useradd</code>. En este ejemplo nuestro usuario se llamar√° ‚Äúfoo‚Äù, ustedes reemplacen el nombre del usuario por el que quieran.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>useradd <span class="nt">-m</span> foo
</code></pre></div></div>

<p>Si ingresamos nuevamente el comando <code class="language-plaintext highlighter-rouge">ls /home/ -l</code> podemos ver que ahora hay una nueva carpeta con el nombre del usuario y esta tiene usuario y grupo ‚Äúfoo‚Äù, esto quiere decir que a parte del usuario root que tiene acceso a todo, nuestro nuevo usuario es el √∫nico due√±o de esta carpeta.</p>

<p>Cambiamos la contrase√±a con <code class="language-plaintext highlighter-rouge">passwd</code>:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>passwd foo
</code></pre></div></div>

<p>Ahora vamos a agregar a nuestro nuevo usuario al grupo wheel para que este pueda ser super usuario:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>usermod <span class="nt">-aG</span> wheel foo
</code></pre></div></div>

<p>Revisamos los grupos de nuestro usuario con el comando <code class="language-plaintext highlighter-rouge">groups</code>.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">groups </span>foo
</code></pre></div></div>

<p>Y nos deber√≠a aparecer algo como:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wheel foo
</code></pre></div></div>

<p>Ahora vamos a abrir el archivo sudoers que sa encuentra en <code class="language-plaintext highlighter-rouge">/etc/sudoers</code>.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>nano /etc/sudoers
</code></pre></div></div>

<p>Descomentamos la siguiente l√≠nea:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># %wheel ALL=(ALL) ALL</span>
</code></pre></div></div>

<p>Quitando el signo ‚Äú#‚Äù:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>%wheel <span class="nv">ALL</span><span class="o">=(</span>ALL<span class="o">)</span> ALL
</code></pre></div></div>

<p>Y guardamos el archivo. Con esta configuraci√≥n si ingresamos <code class="language-plaintext highlighter-rouge">sudo su</code>, el sistema nos pedir√© la contrase√±a del usuario antes de convertirlo en root.</p>

<p>Para cambiar de usuario ocupamos el comando <code class="language-plaintext highlighter-rouge">su</code> y el nombre del usuario.</p>

<p>A modo de prueba nos cambiamos de usuario:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>su foo
</code></pre></div></div>

<p>Podemos verificar nuestro usuario con el comando <code class="language-plaintext highlighter-rouge">whoami</code>.</p>

<p>Ahora ingresemos el comando <code class="language-plaintext highlighter-rouge">sudo su</code></p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>su
</code></pre></div></div>

<p>Nos pedir√° contrase√±a la contrase√±a de nuestro usuario, la ingresamos y nuestro usuario ser√° root nuevamente.</p>

<p>Para salir de estos usuarios:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">exit</span>
<span class="nv">$ </span><span class="nb">exit</span>
</code></pre></div></div>

<h3 id="112-vamos-a-establecer-la-regi√≥n-del-teclado">1.12. Vamos a establecer la regi√≥n del teclado</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>nano /etc/locale.gen
</code></pre></div></div>

<p>Hacemos ctrl+w para buscar, y filtramos por <code class="language-plaintext highlighter-rouge">en_US.UTF-8 UTF-8</code>. Esta l√≠nea la vamos a descomentar.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#en_US.UTF-8 UTF-8</span>
</code></pre></div></div>

<p>Quedando de esta forma:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>en_US.UTF-8 UTF-8
</code></pre></div></div>

<p>Y haremos lo mismo con <code class="language-plaintext highlighter-rouge">es_CL.UTF-8 UTF-8</code> en el caso de Chile o <code class="language-plaintext highlighter-rouge">es_ES.UTF-8 UTF-8</code> para el caso de Espa√±a.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#es_CL.UTF-8 UTF-8</span>
</code></pre></div></div>

<p>Quedando de esta forma:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>es_CL.UTF-8 UTF-8
</code></pre></div></div>

<p>Una vez realizados los cambios, guardamos el archivo.</p>

<p>Ahora ingresamos el siguiente comando para aplicar los cambios:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>locale-gen
</code></pre></div></div>

<p>La salida por pantalla deber√≠a ser algo como esto:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Generating locales...
  en_US.UTF-8... <span class="k">done
  </span>es_CL.UTF-8.. <span class="k">done
</span>Generation complete.
</code></pre></div></div>

<p>Para evitar ingresar a cada rato el comando <code class="language-plaintext highlighter-rouge">loadkeys es</code> vamos a editar el archivo <code class="language-plaintext highlighter-rouge">/etc/vconsole.conf</code> para cambiar el mapa de teclas de las terminales TTY:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>nano /etc/vconsole.conf
</code></pre></div></div>

<p>Ingresamos lo siguiente:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">KEYMAP</span><span class="o">=</span>es
</code></pre></div></div>

<p>y guardamos el archivo.</p>

<p>Con esto, la pr√≥xima vez que reinicies el equipo, va a estar en espa√±ol el teclado.</p>

<p>Para m√°s informaci√≥n respecto a este tema te dejo el link de la documentaci√≥n oficial de archlinux: <a href="https://wiki.archlinux.org/title/Linux_console/Keyboard_configuration">Linux console/Keyboard configuration</a></p>

<h3 id="113-establecer-la-zona-horaria">1.13. Establecer la zona horaria</h3>

<p>Establecemos la zona horaria de nuestro sistema:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">ln</span> <span class="nt">-s</span> /usr/share/zoneinfo/America/Santiago /etc/localtime
</code></pre></div></div>

<p>Configuramos el reloj de hardware en modo UTC:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>hwclock <span class="nt">--systohc</span> <span class="nt">--utc</span>
</code></pre></div></div>

<h3 id="114-modificar-el-nombre-de-nuesta-m√°quina">1.14. Modificar el nombre de nuesta m√°quina</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">echo </span>archlinux <span class="o">&gt;</span> /etc/hostname
</code></pre></div></div>

<h3 id="115-configurar-el-archivo-hosts">1.15. Configurar el archivo hosts</h3>

<p>Abrimos el archivo hosts:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>nano /etc/hosts
</code></pre></div></div>

<p>Ingresamos el siguiente contenido al final del archivo:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>127.0.0.1     localhost
::1           localhost
</code></pre></div></div>

<p>Guardamos el archivo.</p>

<p>Comprobamos que el archivo qued√≥ correctamente escrito:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">cat</span> /etc/hosts
</code></pre></div></div>

<h3 id="116-instalar-el-gestor-de-arranque-boot-loader">1.16. Instalar el gestor de arranque (Boot loader)</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>grub-install /dev/sda
</code></pre></div></div>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>nano /etc/default/grub
</code></pre></div></div>

<p>Editamos el archivo <code class="language-plaintext highlighter-rouge">/etc/default/grub</code> para descomentar/agregar la l√≠nea <code class="language-plaintext highlighter-rouge">GRUB_DISABLE_OS_PROBER=false</code>, guardamos y ejecutamos el siguiente comando para crear el archivo de configuraci√≥n del grub:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>grub-mkconfig <span class="nt">-o</span> /boot/grub/grub.cfg
</code></pre></div></div>

<p><strong>Nota:</strong> -o es letra y no el n√∫mero cero.</p>

<h3 id="117-finalizar-la-instalaci√≥n">1.17. Finalizar la instalaci√≥n</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">exit</span>
<span class="nv">$ </span>reboot
</code></pre></div></div>

<p>Si quieres ver la Gu√≠a oficial de instalaci√≥n de Arch Linux <a href="https://wiki.archlinux.org/index.php/Install_guide">pincha aqu√≠</a>.</p>

<h1 id="2-post-instalaci√≥n-base">2. Post instalaci√≥n base</h1>

<h3 id="21-habilitar-servicio-networkmanager">2.1. Habilitar servicio NetworkManager</h3>

<p>Luego de iniciar sesi√≥n con nuestro usuario, lo primero que vamos a hacer es habilitar el servicio NetworkManager:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>NetworkManager.service
</code></pre></div></div>

<p>Una vez realizado esto, reiniciamos la m√°quina:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>reboot
</code></pre></div></div>

<p>tambi√©n podemos reiniciar la m√°quina con:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>shutdown <span class="nt">-r</span> now
</code></pre></div></div>

<p>Una vez reiniciada, nos logueamos nuevamente y probamos conectividad con la red.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>ping <span class="nt">-c</span> 3 www.google.com
64 bytes from www.google.com <span class="o">(</span>74.125.224.113<span class="o">)</span>: <span class="nv">icmp_seq</span><span class="o">=</span>3 <span class="nv">ttl</span><span class="o">=</span>57 <span class="nb">time</span><span class="o">=</span>27.5 ms
</code></pre></div></div>

<h3 id="22-sincronizar-las-bases-de-datos-de-paquetes">2.2. Sincronizar las bases de datos de paquetes</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-Syu</span>
</code></pre></div></div>

<h3 id="23-instalar-neofetch">2.3. Instalar neofetch</h3>

<p>Es un paquete que al ejecutarse en la terminal recopila informaci√≥n del sistema y la muestra al usuario de forma amigable, incluyendo un logotipo de la distro que se est√° utilizando en formato ASCII.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> neofetch
</code></pre></div></div>

<p>Una vez instalado, lo ejecutamos con el comando <code class="language-plaintext highlighter-rouge">neofetch</code>.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>neofetch
</code></pre></div></div>

<h3 id="24-xorg">2.4. Xorg</h3>

<p>Antes de instalar el entorno de escritorio vamos a instalar el servidor de visualizaci√≥n y algunas utilidades:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> xorg xorg-server xorg-apps xorg-xinit xterm <span class="nt">--noconfirm</span>
</code></pre></div></div>

<p>Una vez finalizada la instalaci√≥n ingresamos el siguiente comando para verificar que todo este bien:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>startx
</code></pre></div></div>

<p>Si nos muestra tres terminales con fondo de color blanco, es por que la instalaci√≥n finalizo correctamente y podemos salir ingresando ‚Äúexit‚Äù.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">exit</span>
</code></pre></div></div>

<h3 id="25-intel-graphics---xorg-drivers">2.5. Intel graphics - Xorg Drivers</h3>

<p>Prerequisito: Xorg.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> xf86-video-intel xf86-input-synaptics
</code></pre></div></div>

<h3 id="26-lightdm">2.6. LightDM</h3>

<p>LightDM es un ligero y r√°pido gestor de sesiones para X Window System. Vamos a ingresar los siguientes comandos:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> lightdm-gtk-greeter lightdm-service
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>lightdm.service
<span class="nv">$ </span><span class="nb">sudo </span>reboot
</code></pre></div></div>

<h3 id="27-para-instalar-gnome-desktop">2.7. Para instalar Gnome Desktop</h3>

<p>Tenemos dos opciones, instalar Gnome sin programas por defecto preinstalados o con todos los programas por defecto preinstalados</p>

<p><strong>Instalaci√≥n m√≠mima</strong></p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> gnome-control-center gdm
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>gdm.service
<span class="nv">$ </span><span class="nb">sudo </span>reboot
</code></pre></div></div>

<p><strong>Instalaci√≥n completa</strong></p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> gnome
</code></pre></div></div>

<p>Nos preguntar√° sobre algunos paquetes, dejaremos todo por defecto. Vamos a presionar enter a todo.</p>

<p>Una vez finalizada la instalaci√≥n ingresaremos este comando para asegurarnos que en la pantalla de inicio de sesi√≥n el teclado est√© configurado en espa√±ol (o el lenguaje que queramos):</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>localectl set-x11-keymap es
</code></pre></div></div>

<p>Finalmente habilitamos el servicio de Gnome y reiniciamos el equipo.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>gdm.service
<span class="nv">$ </span><span class="nb">sudo </span>reboot
</code></pre></div></div>

<h3 id="28-algunos-paquetes-recomendables">2.8. Algunos paquetes recomendables.</h3>

<ul>
  <li>
    <p><code class="language-plaintext highlighter-rouge">gufw</code>: Firewall.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">unrar</code>: Utilidad de descompresi√≥n de archivos .rar.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">git</code>: El sistema de control de versiones m√°s utilizado hoy en d√≠a por desarrolladores de software.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">vim</code>: Potente editor de texto. Versi√≥n mejorada del editor Vi.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">wget</code>: Descarga archivos usando los protocolos de internet m√°s usados como son HTTP, HTTPS, FPT, FTPS.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">zsh</code>: Potente int√©rprete de comandos.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">nmap</code>: Permite revisar los puertos de una m√°quina.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">net-tools</code>: Permite usar comandos como el ifconfig, entre otros.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">htop</code>: Completo sistema de monitorizaci√≥n.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">mlocate</code>: Permite hacer b√∫squeda de archivos en cualquier parte del sistema.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">tree</code>: Paquete para visualizar de manera r√°pida el √°rbol de carpetas/directorios.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">ntfs-3g</code>: Soporte para dispositivos externos (pendrive y otros) que usen sistema de archivos NTFS.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">gvfs-smb</code>: Implementaci√≥n del sistema de archivos virtual para GIO (backend SMB/CIFS; cliente de Windows)</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">gvfs-mtp</code>: Este paquete da soporte para el protocolo de transferencia de datos multimedia MTP (Multimedia Transfer Protocol) de los sistemas Android.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">psensor</code>: Programa que monitorea la temperatura del hardware del equipo.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">dmidecode</code>: Herramienta que permite obtener informaci√≥n de los componentes de hardware del sistema.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">terminator</code>: Terminator es un emulador de terminal muy completo. Una de sus caracteristicas m√°s destacables es que permite hacer split de la ventana para abrir multiples terminales.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">bleachbit</code>: Bleachbit Es una herramienta de limpieza del disco duro.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">vlc</code>: Reproductor multimedia que reproduce la mayor√≠a de los archivos multimedia gracias a tiene la mayor√≠a de codecs necesarios.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">gnome-tweak-tool</code>: Herramienta para configurar la apariencia de Gnome.</p>
  </li>
</ul>

<p>Instalaci√≥n:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> gufw unrar git vim wget zsh nmap net-tools htop mlocate tree  <span class="se">\</span>
ntfs-3g gvfs-smb gvfs-mtp psensor dmidecode terminator bleachbit vlc gnome-tweak-tool
</code></pre></div></div>

<h3 id="29-wallpapers-y-fuentes">2.9. Wallpapers y fuentes</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> archlinux-wallpaper ttf-liberation ttf-dejavu ttf-freefont
</code></pre></div></div>

<h3 id="210-oh-my-zsh">2.10. Oh My Zsh</h3>

<p>Oh My Zsh es un framework para la gesti√≥n de la configuraci√≥n de Zsh. Permite instalar temas, plugins, helpers, etc f√°cilmente. Es open source.</p>

<p>Para instalarlo:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>sh <span class="nt">-c</span> <span class="s2">"</span><span class="si">$(</span>curl <span class="nt">-fsSL</span> https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh<span class="si">)</span><span class="s2">"</span>
</code></pre></div></div>

<p><a href="https://github.com/robbyrussell/oh-my-zsh">oh-my-zsh - repositorio</a></p>

<p><a href="https://ohmyz.sh/">sitio web oficial</a></p>

<h3 id="si-el-sistema-est√°-instalado-en-una-vm-de-virtualbox">Si el sistema est√° instalado en una VM de Virtualbox</h3>

<h4 id="virtualbox-guest-additions">Virtualbox Guest Additions</h4>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> virtualbox-guest-utils
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>vboxservice.service
</code></pre></div></div>]]></content><author><name></name></author><category term="linux" /><category term="arch-linux" /><category term="Linux" /><category term="Arch Linux" /><summary type="html"><![CDATA[Esta es una gu√≠a paso a paso de como instalar Arch Linux 2022.06.01 x86_64. Con esta gu√≠a el usuario ser√° capaz de cambiar el idioma del teclado, particionar el disco, realizar la instalaci√≥n de un entorno de escritorio y m√°s, todo el proceso se realiza por l√≠nea de comandos. 1. Instalaci√≥n base Vamos a seleccionar la primera opci√≥n ‚ÄúArch Linux install medium (x86_64, BIOS)‚Äù 1.1 Deshabilitar el molesto sonido de las teclas del teclado $ rmmod pcspkr 1.2 Cambiar el idioma del teclado a espa√±ol. $ loadkeys es 1.3. Probando conectividad con la red. $ ping -c 3 www.google.com 64 bytes from www.google.com (74.125.224.113): icmp_seq=3 ttl=57 time=27.5 ms 1.4. Particiones de disco duro basadas en BIOS $ fdisk -l $ cfdisk /dev/sda Seleccionar label ‚Äúdos‚Äù. Si tenemos un sistema con 8 GiB o m√°s de memoria probablemente podamos prescindir de la partici√≥n de swap. Sino debemos crear una. Crearemos las siguientes particiones: Tama√±o Tipo 250 M Boot, primaria 4 G Linux swap, primaria resto Linux, primaria En esta gu√≠a crearemos las 3 particiones primarias del segundo caso. Solo puede crear cuatro particiones primarias en cualquier disco duro f√≠sico. Este l√≠mite de partici√≥n se extiende a la partici√≥n de intercambio de Linux, as√≠ como a cualquier instalaci√≥n de sistema operativo o particiones con fines especiales adicionales, como /root, /home, /boot, etc., que desee crear. Si por alguna raz√≥n necesitamos m√°s particiones podemos ocupar una partici√≥n extendida. Partici√≥n Extendida: Es un tipo especial de partici√≥n que contiene ‚Äúespacio libre‚Äù en el que se pueden crear m√°s de las cuatro particiones primarias. Dentro de la partici√≥n extendida podemos crear varias particiones, estas se llaman particiones l√≥gicas. Podemos crear N particiones l√≥gicas dentro de una partici√≥n extendida. Algunas convenciones al respecto: Si va a crear una particion extendida, debemos tener m√°ximo tres particiones primarias. S√≥lo se debe crear una partici√≥n extendida en un disco duro (aunque puede tener una partici√≥n extendida en cada uno de los discos duros del sistema) Una partici√≥n extendida no se puede formatear con un sistema de archivos como ext4, FAT o NTFS, ni puede contener datos directamente. Esa es la funci√≥n de las unidades l√≥gicas que se crean dentro de √©l. A continuaci√≥n vamos a crear nuestra primera partici√≥n; Para esto debemos seguir los siguientes pasos: -&gt; Con la tecla ‚Äúenter‚Äù seleccionar el espacio libre del disco y seleccionar ‚ÄúNew‚Äù -&gt; Partition size: 250M -&gt; Seleccionar [primary] -&gt; Seleccionar [Bootable] Ahora crearemos la segunda partici√≥n: -&gt; Presionamos la tecla de la flecha hacia abajo para seleccionar el espacio libre del disco y ‚Äúenter‚Äù para seleccionar ‚ÄúNew‚Äù -&gt; Partition size: 4G -&gt; Seleccionar [primary] -&gt; Seleccionar [Type] -&gt; Seleccionar ‚Äú82 Linux swap / Solaris‚Äù Ahora crearemos la √∫ltima partici√≥n: -&gt; Seleccionar el espacio libre del disco y seleccionar ‚ÄúNew‚Äù -&gt; En ‚ÄúPartition size: ‚Äú nos sugerir√° lo que nos queda de espacio libre. Presionamos enter para asignar ese tama√±o a nuestra nueva partici√≥n. -&gt; Seleccionar [primary] Finalmente -&gt; Seleccionar [Write] -&gt; Para confirmar igresamos ‚Äúyes‚Äù y presionamos la tecla enter. -&gt; Seleccionar [Quit] Si ejecutamos el comando lsblk podemos ver lo que hemos definido. 1.5. Formateando las particiones 1.5.1. Formatear la partici√≥n Boot $ mkfs.ext3 /dev/sda1 1.5.2. Formatear la partici√≥n / $ mkfs.ext4 /dev/sda3 1.6. Crear y activar la swap Creamos la swap o espacio de intercambio: $ mkswap /dev/sda2 Y activamos la swap: $ swapon /dev/sda2 1.7. Montar las particiones Lo siguiente que haremos es montar las particiones para empezar a usarlas, primero la partici√≥n root (/), que en esta gu√≠a es sda3 y luego la partici√≥n boot (/boot) que ser√° sda1. Si tenemos un disco SSD montamos las particiones usando las opciones de montaje adecuados para que se use TRIM: $ mount -o noatime,discard /dev/sda3 /mnt $ mkdir -p /mnt/boot $ mount -o noatime,discard /dev/sda1 /mnt/boot Si tenemos un disco HDD montamos las particiones de la siguiente forma: $ mount /dev/sda3 /mnt $ mkdir -p /mnt/boot $ mount /dev/sda1 /mnt/boot 1.8. Instalar paquetes del sistema base $ pacstrap -i /mnt linux linux-firmware linux-headers grub base base-devel sudo nano networkmanager wpa_supplicant Nos dar√° elegir que paquetes queremos instalar. Presionar enter para que instale todo por defecto. Y luego ingresar ‚ÄúY‚Äù para confirmar. 1.9. Generando el FSTAB. Este archivo define c√≥mo deben montarse las particiones de disco en el sistema de archivos. $ genfstab -U -p /mnt &gt; /mnt/etc/fstab y comprobamos con: $ cat !$ 1.10. Chroot y configuraci√≥n de sistema base Hacemos un chroot para cambiar el directorio root que estamos usando para configurar nuestro sistema. $ arch-chroot /mnt Vamos a utilizar el comando passwd para definir una contrase√±a para el usuarios root $ passwd 1.11. Crear Usuario Si ingresamos el comando ls /home/ podemos ver que no existe ninguna carpeta de usuario. Para crear un usuario vamos a utilizar el comando useradd. En este ejemplo nuestro usuario se llamar√° ‚Äúfoo‚Äù, ustedes reemplacen el nombre del usuario por el que quieran. $ useradd -m foo Si ingresamos nuevamente el comando ls /home/ -l podemos ver que ahora hay una nueva carpeta con el nombre del usuario y esta tiene usuario y grupo ‚Äúfoo‚Äù, esto quiere decir que a parte del usuario root que tiene acceso a todo, nuestro nuevo usuario es el √∫nico due√±o de esta carpeta. Cambiamos la contrase√±a con passwd: $ passwd foo Ahora vamos a agregar a nuestro nuevo usuario al grupo wheel para que este pueda ser super usuario: $ usermod -aG wheel foo Revisamos los grupos de nuestro usuario con el comando groups. $ groups foo Y nos deber√≠a aparecer algo como: wheel foo Ahora vamos a abrir el archivo sudoers que sa encuentra en /etc/sudoers. $ nano /etc/sudoers Descomentamos la siguiente l√≠nea: # %wheel ALL=(ALL) ALL Quitando el signo ‚Äú#‚Äù: %wheel ALL=(ALL) ALL Y guardamos el archivo. Con esta configuraci√≥n si ingresamos sudo su, el sistema nos pedir√© la contrase√±a del usuario antes de convertirlo en root. Para cambiar de usuario ocupamos el comando su y el nombre del usuario. A modo de prueba nos cambiamos de usuario: $ su foo Podemos verificar nuestro usuario con el comando whoami. Ahora ingresemos el comando sudo su $ sudo su Nos pedir√° contrase√±a la contrase√±a de nuestro usuario, la ingresamos y nuestro usuario ser√° root nuevamente. Para salir de estos usuarios: $ exit $ exit 1.12. Vamos a establecer la regi√≥n del teclado $ nano /etc/locale.gen Hacemos ctrl+w para buscar, y filtramos por en_US.UTF-8 UTF-8. Esta l√≠nea la vamos a descomentar. #en_US.UTF-8 UTF-8 Quedando de esta forma: en_US.UTF-8 UTF-8 Y haremos lo mismo con es_CL.UTF-8 UTF-8 en el caso de Chile o es_ES.UTF-8 UTF-8 para el caso de Espa√±a. #es_CL.UTF-8 UTF-8 Quedando de esta forma: es_CL.UTF-8 UTF-8 Una vez realizados los cambios, guardamos el archivo. Ahora ingresamos el siguiente comando para aplicar los cambios: $ locale-gen La salida por pantalla deber√≠a ser algo como esto: Generating locales... en_US.UTF-8... done es_CL.UTF-8.. done Generation complete. Para evitar ingresar a cada rato el comando loadkeys es vamos a editar el archivo /etc/vconsole.conf para cambiar el mapa de teclas de las terminales TTY: $ nano /etc/vconsole.conf Ingresamos lo siguiente: KEYMAP=es y guardamos el archivo. Con esto, la pr√≥xima vez que reinicies el equipo, va a estar en espa√±ol el teclado. Para m√°s informaci√≥n respecto a este tema te dejo el link de la documentaci√≥n oficial de archlinux: Linux console/Keyboard configuration 1.13. Establecer la zona horaria Establecemos la zona horaria de nuestro sistema: $ ln -s /usr/share/zoneinfo/America/Santiago /etc/localtime Configuramos el reloj de hardware en modo UTC: $ hwclock --systohc --utc 1.14. Modificar el nombre de nuesta m√°quina $ echo archlinux &gt; /etc/hostname 1.15. Configurar el archivo hosts Abrimos el archivo hosts: $ nano /etc/hosts Ingresamos el siguiente contenido al final del archivo: 127.0.0.1 localhost ::1 localhost Guardamos el archivo. Comprobamos que el archivo qued√≥ correctamente escrito: $ cat /etc/hosts 1.16. Instalar el gestor de arranque (Boot loader) $ grub-install /dev/sda $ nano /etc/default/grub Editamos el archivo /etc/default/grub para descomentar/agregar la l√≠nea GRUB_DISABLE_OS_PROBER=false, guardamos y ejecutamos el siguiente comando para crear el archivo de configuraci√≥n del grub: $ grub-mkconfig -o /boot/grub/grub.cfg Nota: -o es letra y no el n√∫mero cero. 1.17. Finalizar la instalaci√≥n $ exit $ reboot Si quieres ver la Gu√≠a oficial de instalaci√≥n de Arch Linux pincha aqu√≠. 2. Post instalaci√≥n base 2.1. Habilitar servicio NetworkManager Luego de iniciar sesi√≥n con nuestro usuario, lo primero que vamos a hacer es habilitar el servicio NetworkManager: $ sudo systemctl enable NetworkManager.service Una vez realizado esto, reiniciamos la m√°quina: $ sudo reboot tambi√©n podemos reiniciar la m√°quina con: $ sudo shutdown -r now Una vez reiniciada, nos logueamos nuevamente y probamos conectividad con la red. $ ping -c 3 www.google.com 64 bytes from www.google.com (74.125.224.113): icmp_seq=3 ttl=57 time=27.5 ms 2.2. Sincronizar las bases de datos de paquetes $ sudo pacman -Syu 2.3. Instalar neofetch Es un paquete que al ejecutarse en la terminal recopila informaci√≥n del sistema y la muestra al usuario de forma amigable, incluyendo un logotipo de la distro que se est√° utilizando en formato ASCII. $ sudo pacman -S neofetch Una vez instalado, lo ejecutamos con el comando neofetch. $ neofetch 2.4. Xorg Antes de instalar el entorno de escritorio vamos a instalar el servidor de visualizaci√≥n y algunas utilidades: $ sudo pacman -S xorg xorg-server xorg-apps xorg-xinit xterm --noconfirm Una vez finalizada la instalaci√≥n ingresamos el siguiente comando para verificar que todo este bien: $ startx Si nos muestra tres terminales con fondo de color blanco, es por que la instalaci√≥n finalizo correctamente y podemos salir ingresando ‚Äúexit‚Äù. $ exit 2.5. Intel graphics - Xorg Drivers Prerequisito: Xorg. $ sudo pacman -S xf86-video-intel xf86-input-synaptics 2.6. LightDM LightDM es un ligero y r√°pido gestor de sesiones para X Window System. Vamos a ingresar los siguientes comandos: $ sudo pacman -S lightdm-gtk-greeter lightdm-service $ sudo systemctl enable lightdm.service $ sudo reboot 2.7. Para instalar Gnome Desktop Tenemos dos opciones, instalar Gnome sin programas por defecto preinstalados o con todos los programas por defecto preinstalados Instalaci√≥n m√≠mima $ sudo pacman -S gnome-control-center gdm $ sudo systemctl enable gdm.service $ sudo reboot Instalaci√≥n completa $ sudo pacman -S gnome Nos preguntar√° sobre algunos paquetes, dejaremos todo por defecto. Vamos a presionar enter a todo. Una vez finalizada la instalaci√≥n ingresaremos este comando para asegurarnos que en la pantalla de inicio de sesi√≥n el teclado est√© configurado en espa√±ol (o el lenguaje que queramos): $ sudo localectl set-x11-keymap es Finalmente habilitamos el servicio de Gnome y reiniciamos el equipo. $ sudo systemctl enable gdm.service $ sudo reboot 2.8. Algunos paquetes recomendables. gufw: Firewall. unrar: Utilidad de descompresi√≥n de archivos .rar. git: El sistema de control de versiones m√°s utilizado hoy en d√≠a por desarrolladores de software. vim: Potente editor de texto. Versi√≥n mejorada del editor Vi. wget: Descarga archivos usando los protocolos de internet m√°s usados como son HTTP, HTTPS, FPT, FTPS. zsh: Potente int√©rprete de comandos. nmap: Permite revisar los puertos de una m√°quina. net-tools: Permite usar comandos como el ifconfig, entre otros. htop: Completo sistema de monitorizaci√≥n. mlocate: Permite hacer b√∫squeda de archivos en cualquier parte del sistema. tree: Paquete para visualizar de manera r√°pida el √°rbol de carpetas/directorios. ntfs-3g: Soporte para dispositivos externos (pendrive y otros) que usen sistema de archivos NTFS. gvfs-smb: Implementaci√≥n del sistema de archivos virtual para GIO (backend SMB/CIFS; cliente de Windows) gvfs-mtp: Este paquete da soporte para el protocolo de transferencia de datos multimedia MTP (Multimedia Transfer Protocol) de los sistemas Android. psensor: Programa que monitorea la temperatura del hardware del equipo. dmidecode: Herramienta que permite obtener informaci√≥n de los componentes de hardware del sistema. terminator: Terminator es un emulador de terminal muy completo. Una de sus caracteristicas m√°s destacables es que permite hacer split de la ventana para abrir multiples terminales. bleachbit: Bleachbit Es una herramienta de limpieza del disco duro. vlc: Reproductor multimedia que reproduce la mayor√≠a de los archivos multimedia gracias a tiene la mayor√≠a de codecs necesarios. gnome-tweak-tool: Herramienta para configurar la apariencia de Gnome. Instalaci√≥n: $ sudo pacman -S gufw unrar git vim wget zsh nmap net-tools htop mlocate tree \ ntfs-3g gvfs-smb gvfs-mtp psensor dmidecode terminator bleachbit vlc gnome-tweak-tool 2.9. Wallpapers y fuentes $ sudo pacman -S archlinux-wallpaper ttf-liberation ttf-dejavu ttf-freefont 2.10. Oh My Zsh Oh My Zsh es un framework para la gesti√≥n de la configuraci√≥n de Zsh. Permite instalar temas, plugins, helpers, etc f√°cilmente. Es open source. Para instalarlo: $ sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" oh-my-zsh - repositorio sitio web oficial Si el sistema est√° instalado en una VM de Virtualbox Virtualbox Guest Additions $ sudo pacman -S virtualbox-guest-utils $ sudo systemctl enable vboxservice.service]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://aduartem.github.io/assets/images/posts/2018/5d2e08b0-b4b8-4766-b93d-2ba1aff1470d.png" /><media:content medium="image" url="https://aduartem.github.io/assets/images/posts/2018/5d2e08b0-b4b8-4766-b93d-2ba1aff1470d.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">üíª 20 Programas que no pueden faltar en Arch Linux - Post instalaci√≥n de Arch Linux 2018.08.01</title><link href="https://aduartem.github.io/linux/arch-linux/2018/11/20/Programas-que-no-pueden-faltar-en-Arch-Linux.html" rel="alternate" type="text/html" title="üíª 20 Programas que no pueden faltar en Arch Linux - Post instalaci√≥n de Arch Linux 2018.08.01" /><published>2018-11-20T00:00:00+00:00</published><updated>2018-11-20T00:00:00+00:00</updated><id>https://aduartem.github.io/linux/arch-linux/2018/11/20/Programas-que%20no-pueden-faltar-en-Arch-Linux</id><content type="html" xml:base="https://aduartem.github.io/linux/arch-linux/2018/11/20/Programas-que-no-pueden-faltar-en-Arch-Linux.html"><![CDATA[<p>En este art√≠culo har√© menci√≥n de 20 programas que no pueden faltar en t√∫ sistema Arch Linux. Har√© una breve descripci√≥n de cada programa y como podemos instalarlo en nuestro equipo.</p>

<p>Pero primero que todo, antes de instalar cualquier programa, como es de costumbre, vamos a actualizar el cache del repositorio de paquetes de pacman:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-Sy</span>
</code></pre></div></div>

<h2 id="net-tools">net-tools</h2>

<p>El paquete net-tools nos permite usar comandos como el <strong>ifconfig</strong>, entre otros.</p>

<p>Para instalar:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> net-tools
</code></pre></div></div>

<p><strong>Nota:</strong> Para ver revisar si un programa se encuentra en los repositorios oficiales de Arch Linux:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-Ss</span> <span class="o">{</span>nombrePrograma<span class="o">}</span>
</code></pre></div></div>

<h2 id="secure-shell">Secure Shell</h2>

<p>Cliente ssh, nos permite usar comandos como el <strong>ssh</strong>, <strong>ssh-keygen</strong>, entre otros.</p>

<p>Para instalar:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> openssh
</code></pre></div></div>

<h2 id="tree">Tree</h2>

<p>Paquete para visualizar de manera r√°pido el √°rbol de carpetas/directorios.</p>

<p>Para instalar:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> tree
</code></pre></div></div>

<h2 id="zsh">ZSH</h2>

<p>El Zsh (shell Z) es un potente int√©rprete de comandos</p>

<p>Para instalar:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> zsh
</code></pre></div></div>

<h2 id="curl">Curl</h2>

<p>Int√©rprete de comandos open source, software libre bajo la licencia MIT. Est√° orientado a la transferencia de archivos. Soporta los protocolos FTP, FTPS, HTTP, HTTPS, TFTP, SCP, SFTP, Telnet, DICT, FILE y LDAP, entre otros.</p>

<p>Para instalar:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> curl
</code></pre></div></div>

<h2 id="wget">Wget</h2>

<p>GNU Wget es un paquete de software libre y gratuito. Est√° orientado a la descarga de archivos usando los protocolos de internet m√°s usados com son HTTP, HTTPS, FPT, FTPS. Es una herramienta de l√≠nea de comandos no interactiva, por lo que se puede llamar f√°cilmente desde scripts, cronjobs, desde la terminal, etc.</p>

<p>Para instalar GNU Curl:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> wget
</code></pre></div></div>

<h2 id="locate">Locate</h2>

<p>Es una nueva implementaci√≥n del paquete locate. Nos permite hacer b√∫squeda de archivos en cualquier parte del sistema. Funciona en sistemas GNU/Linux.</p>

<p>Para instalar ejecutar:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> mlocate
<span class="nv">$ </span><span class="nb">sudo </span>updatedb
</code></pre></div></div>

<p>Para realizar una b√∫squeda:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>locate nombre_archivo
</code></pre></div></div>

<h2 id="dmidecode">dmidecode</h2>

<p>Este paquete es una herramienta que permite obtener informaci√≥n de los componentes de hardware del sistema.</p>

<p>Para instalar ingresar:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> dmidecode
</code></pre></div></div>

<p>Para listar las opciones que podemos consultar:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>dmidecode <span class="nt">-s</span> string
</code></pre></div></div>

<p>Comando linux para encontrar el n√∫mero serial:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>dmidecode <span class="nt">-s</span> system-serial-number
</code></pre></div></div>

<p>Como obtener la versi√≥n y fecha de la bios:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>dmidecode <span class="nt">-s</span> bios-release-date
<span class="nv">$ </span><span class="nb">sudo </span>dmidecode <span class="nt">-s</span> bios-version
</code></pre></div></div>

<p>Como obtener el nombre del producto del sistema:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>dmidecode <span class="nt">-s</span> system-product-name
</code></pre></div></div>

<h2 id="powerline">Powerline</h2>

<p>Es un complemento para la l√≠nea de comandos. Le da super poderes.</p>

<p>Instalaci√≥n:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> powerline powerline-fonts
</code></pre></div></div>

<h2 id="otras-fuentes">Otras fuentes</h2>

<p>Paquetes de fuentes.</p>

<p>Instalaci√≥n:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> ttf-liberation ttf-dejavu ttf-freefont
</code></pre></div></div>

<p>Instalar con AUR:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ttf-ms-fonts
</code></pre></div></div>

<h2 id="terminator">Terminator</h2>

<p>Es un emulador de terminal muy completo. Permite hacer split de la ventana, crear pesta√±as, configurar el perfil para cambiar el tema o bien crear un nuevo tema, etc.</p>

<p>Instalaci√≥n:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> terminator
</code></pre></div></div>

<h2 id="vim">Vim</h2>

<p>Vim es una versi√≥n mejorada del editor de texto Vi y uno de los editores de texto m√°s poderosos hasta la fecha. Es open source y se distribuye bajo una licencia Charityware compatible con la licencia GPL.</p>

<p>Instalaci√≥n:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>pacman <span class="nt">-S</span> vim
</code></pre></div></div>

<h2 id="git">Git</h2>

<p>Git es un sistema de control de versiones, el m√°s popular en la actualidad. Es software libre y c√≥digo abierto, dise√±ado por Linux Torvalds.</p>

<p>Instalaci√≥n:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> git
</code></pre></div></div>

<p>Verificamos la versi√≥n de Git instalada:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>git <span class="nt">--version</span>
git version 2.18.0
</code></pre></div></div>

<p>Configurar usuario global:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>git config <span class="nt">--global</span> user.name <span class="s2">"Mi nombre"</span>
<span class="nv">$ </span>git config <span class="nt">--global</span> user.email <span class="s2">"mi@correo.com"</span>
</code></pre></div></div>

<p>Listar configuraci√≥n:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>git config <span class="nt">-l</span>
</code></pre></div></div>

<p>Generar llave ssh:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>ssh-keygen <span class="nt">-t</span> rsa <span class="nt">-C</span> <span class="s2">"your_email@example.com"</span>
</code></pre></div></div>

<h2 id="oh-my-zsh">oh-my-zsh</h2>

<p>Oh My Zsh es un framework para la gesti√≥n de la configuraci√≥n de Zsh. Permite instalar temas, plugins, helpers, etc f√°cilmente. Es open source.</p>

<p>Requisitos:</p>

<ul>
  <li>zsh</li>
  <li>curl</li>
  <li>git</li>
  <li>Powerline Fonts</li>
</ul>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>sh <span class="nt">-c</span> <span class="s2">"</span><span class="si">$(</span>curl <span class="nt">-fsSL</span> https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh<span class="si">)</span><span class="s2">"</span>
</code></pre></div></div>

<p>Una vez finalizada la instalaci√≥n reiniciar la terminal.</p>

<p>Para instalar el tema <strong>agnoster</strong> editar el archivo <strong>~/.zshrc</strong> y modificar el valor de ZSH_THEME=‚Äùrobbyrussell‚Äù por ZSH_THEME=‚Äùagnoster‚Äù</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">ZSH_THEME</span><span class="o">=</span><span class="s2">"agnoster"</span>
</code></pre></div></div>

<p><a href="https://github.com/robbyrussell/oh-my-zsh">oh-my-zsh - repositorio</a></p>

<h2 id="ntfs-filesystem-driver-and-utilities">NTFS filesystem driver and utilities</h2>

<p>Soporte para dispositivos externos (pendrive y otros).</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> ntfs-3g
</code></pre></div></div>

<h2 id="virtual-filesystem-implementation-for-gio">Virtual filesystem implementation for GIO</h2>

<p>Implementaci√≥n del sistema de archivos virtual para GIO (backend SMB/CIFS; cliente de Windows)</p>

<p>Instalaci√≥n:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> gvfs-smb
</code></pre></div></div>

<h2 id="soporte-media-transfer-protocol-mtp-android">Soporte Media Transfer Protocol (MTP), Android</h2>

<p>Este paquete da soporte para el protocolo de transferencia de datos multimedia MTP (Multimedia Transfer Protocol) de los sistemas Android.</p>

<p>Instalaci√≥n:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> gvfs-mtp
</code></pre></div></div>

<h2 id="instalar-yaourt-usando-aur">Instalar Yaourt usando AUR</h2>

<p>Yaourt es un gestor de paquetes como Pacman. La principal diferencia es que Pacman gestiona los repositorios oficiales, en cambio Yaourt los no oficiales (AUR).</p>

<p>Antes de instalar Yaourt usando necesitamos tener instalado git y wget.</p>

<p>Clonamos el repositorio AUR de package-query:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>git clone https://aur.archlinux.org/package-query.git
</code></pre></div></div>

<p>Cambiamos de directorio a la carpeta del repositorio clonado e instalamos el paquete:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">cd </span>package-query
<span class="nv">$ </span>makepkg <span class="nt">-si</span>
</code></pre></div></div>

<p>Confirmamos la instalaci√≥n. Una vez finalizada la instalaci√≥n cambiamos de directorio y clonamos el repositorio AUR de Yaourt:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">cd</span> ..
<span class="nv">$ </span>git clone https://aur.archlinux.org/yaourt.git
</code></pre></div></div>

<p>Cambiamos de directorio a la carpeta del repositorio clonado e instalamos el paquete:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">cd </span>yaourt
<span class="nv">$ </span>makepkg <span class="nt">-si</span>
</code></pre></div></div>

<p>Finalmente eliminamos las carpetas de los repos clonados:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">cd</span> ..
<span class="nv">$ </span><span class="nb">rm</span> <span class="nt">-rf</span> package-query yaourt
</code></pre></div></div>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>yaourt <span class="nt">-V</span>
yaourt 1.9
p√°gina web: http://archlinux.fr/yaourt-en
</code></pre></div></div>

<h4 id="uso">Uso</h4>

<p>Sintaxis:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yaourt &lt;operation&gt; <span class="o">[</span>options] <span class="o">[</span>packages]
</code></pre></div></div>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yaourt &lt;search pattern|package file&gt;
</code></pre></div></div>

<p>Para actualizar Arch Linux System, ejecutar:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>yaourt <span class="nt">-Syu</span>
</code></pre></div></div>

<p>Para instalar un paquete, ejecutar:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>yaourt <span class="nt">-S</span> &lt;package-name&gt;
</code></pre></div></div>

<p>Para hacer un upgrade de un paquete:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>yaourt <span class="nt">-U</span> &lt;package&gt;
</code></pre></div></div>

<p>Para eliminar un paquete:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>yaourt <span class="nt">-R</span> &lt;package-name&gt;
</code></pre></div></div>

<h2 id="vlc-media-player">VLC media player</h2>

<p>Seguramente ya lo conocer‚Ä¶ VLC es un reproductor multimedia libre y de c√≥digo abierto multiplataforma. Reproduce la mayor√≠a de archivos multimedia, DVD, Audio CD, VCD y diversos protocolos de transmisi√≥n.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> vlc
</code></pre></div></div>

<h2 id="libre-office">Libre Office</h2>

<p>LibreOffice es un paquete de software de oficina libre y de c√≥digo abierto</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> libreoffice-fresh
<span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> libreoffice-fresh-es
</code></pre></div></div>

<p><a href="https://wiki.archlinux.org/index.php/LibreOffice_(Espa%C3%B1ol)#Instalaci.C3.B3n">Libre Office - Wiki Arch Linux</a></p>]]></content><author><name></name></author><category term="linux" /><category term="arch-linux" /><category term="Linux" /><category term="Arch Linux" /><summary type="html"><![CDATA[En este art√≠culo har√© menci√≥n de 20 programas que no pueden faltar en t√∫ sistema Arch Linux. Har√© una breve descripci√≥n de cada programa y como podemos instalarlo en nuestro equipo.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://aduartem.github.io/assets/images/posts/2018/52feee0c-1970-4cf3-ba95-27bf92f89b57.png" /><media:content medium="image" url="https://aduartem.github.io/assets/images/posts/2018/52feee0c-1970-4cf3-ba95-27bf92f89b57.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>